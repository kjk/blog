{
  "ID": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
  "Page": {
    "alive": true,
    "content": [
      "0975572b-fda6-4db3-bd6f-c23aead8684f",
      "1da63710-bd47-4ce8-94c4-428f01b1643f",
      "b5498033-845b-4b7c-9cfe-3ea221b392a7",
      "8868a744-d279-4baa-8faf-567c0999dd5d",
      "72f9d8b2-4747-42c7-9462-51c1382ab950",
      "b0220605-cddd-4b79-ad92-b24cff02d70d",
      "a559a577-7f34-42be-92db-83e7f4dc3313",
      "b56d7f05-d7ce-47be-9ac2-acb90ff67c16",
      "04783edb-42af-4eab-9325-0350994bec15",
      "f4592e30-666b-42ec-b78a-675a4f04c8ae",
      "3fcadde2-7542-4afc-8de0-cff1f613bcb7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531195824249,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531624220830,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pickling (serialization) in Python"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824249,
        "id": "0975572b-fda6-4db3-bd6f-c23aead8684f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624220830,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 312"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 312"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824249,
        "id": "1da63710-bd47-4ce8-94c4-428f01b1643f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824249,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: python"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: python"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824249,
        "id": "b5498033-845b-4b7c-9cfe-3ea221b392a7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824249,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2005-12-30T16:00:00-08:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2005-12-30T16:00:00-08:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824249,
        "id": "8868a744-d279-4baa-8faf-567c0999dd5d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624216043,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824249,
        "id": "72f9d8b2-4747-42c7-9462-51c1382ab950",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824249,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pickling is an easy way to serialize data in Python. One possible use for that is preserving the state across script executions (like saving preferences)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pickling is an easy way to serialize data in Python. One possible use for that is preserving the state across script executions (like saving preferences)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824249,
        "id": "b0220605-cddd-4b79-ad92-b24cff02d70d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824249,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are few things worth knowing:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are few things worth knowing:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824249,
        "id": "a559a577-7f34-42be-92db-83e7f4dc3313",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824249,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "python has "
            ],
            [
              "pickle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "cPickle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " modules. They are almost the same ("
            ],
            [
              "pickle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " handles more cases but "
            ],
            [
              "cPickle",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is faster)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "python has "
          },
          {
            "Text": "pickle",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "cPickle",
            "AttrFlags": 2
          },
          {
            "Text": " modules. They are almost the same ("
          },
          {
            "Text": "pickle",
            "AttrFlags": 2
          },
          {
            "Text": " handles more cases but "
          },
          {
            "Text": "cPickle",
            "AttrFlags": 2
          },
          {
            "Text": " is faster)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824250,
        "id": "b56d7f05-d7ce-47be-9ac2-acb90ff67c16",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824250,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "you can specify protocol parameter to "
            ],
            [
              "dump()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. Use "
            ],
            [
              "cPickle.HIGHEST_PROTOCOL",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - it’s the most efficient one"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "you can specify protocol parameter to "
          },
          {
            "Text": "dump()",
            "AttrFlags": 2
          },
          {
            "Text": " function. Use "
          },
          {
            "Text": "cPickle.HIGHEST_PROTOCOL",
            "AttrFlags": 2
          },
          {
            "Text": " - it’s the most efficient one"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824250,
        "id": "04783edb-42af-4eab-9325-0350994bec15",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824250,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the simplest thing to do is to stuff everything you want to serialize in a hash and serialize the hash"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the simplest thing to do is to stuff everything you want to serialize in a hash and serialize the hash"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824250,
        "id": "f4592e30-666b-42ec-b78a-675a4f04c8ae",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824250,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code snippet below shows how to save and load some data to a file. It removes the file if unpickling fails (which can happen if e.g. file is corrupted or not in the right format). The retry logic comes from experience - I found that "
            ],
            [
              "os.remove()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " right after "
            ],
            [
              "close()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " might fail."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The code snippet below shows how to save and load some data to a file. It removes the file if unpickling fails (which can happen if e.g. file is corrupted or not in the right format). The retry logic comes from experience - I found that "
          },
          {
            "Text": "os.remove()",
            "AttrFlags": 2
          },
          {
            "Text": " right after "
          },
          {
            "Text": "close()",
            "AttrFlags": 2
          },
          {
            "Text": " might fail."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824250,
        "id": "3fcadde2-7542-4afc-8de0-cff1f613bcb7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824250,
        "parent_id": "f0c76acc-7558-42c4-a6b2-a08e6cffa067",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "import sys, os, string, time, cPickle\n\nDATA_FILE_NAME = \"settings.dat\"\n\ndef saveData():\n    fo = open(DATA_FILE_NAME, \"wb\")\n    version = 1.0\n    aString = \"some data\"\n    cPickle.dump(version, fo, protocol = cPickle.HIGHEST_PROTOCOL)\n    cPickle.dump(aString, fo, protocol = cPickle.HIGHEST_PROTOCOL)\n    fo.close()\n\ndef loadData():\n    try:\n        fo = open(DATA_FILE_NAME, \"rb\")\n    except IOError:\n        # it's ok to not have the file\n        print \"didn't find file %s with data\" % DATA_FILE_NAME\n        return\n    try:\n        version = cPickle.load(fo)\n        aString = cPickle.load(fo)\n    except:\n        fo.close()\n        removeRetryCount = 0\n        while removeRetryCount \u003c 3:\n            try:\n                os.remove(filePath)\n                break\n            except:\n                time.sleep(1) # try to sleep to make the time for the file not be used anymore\n                print \"exception: n  %s, n  %s, n  %s n  when trying to remove file %s\" % (sys.exc_info()[0], sys.exc_info()[1], sys.exc_info()[2], filePath)\n            removeRetryCount += 1\n        return\n    fo.close()"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import sys, os, string, time, cPickle\n\nDATA_FILE_NAME = \"settings.dat\"\n\ndef saveData():\n    fo = open(DATA_FILE_NAME, \"wb\")\n    version = 1.0\n    aString = \"some data\"\n    cPickle.dump(version, fo, protocol = cPickle.HIGHEST_PROTOCOL)\n    cPickle.dump(aString, fo, protocol = cPickle.HIGHEST_PROTOCOL)\n    fo.close()\n\ndef loadData():\n    try:\n        fo = open(DATA_FILE_NAME, \"rb\")\n    except IOError:\n        # it's ok to not have the file\n        print \"didn't find file %s with data\" % DATA_FILE_NAME\n        return\n    try:\n        version = cPickle.load(fo)\n        aString = cPickle.load(fo)\n    except:\n        fo.close()\n        removeRetryCount = 0\n        while removeRetryCount \u003c 3:\n            try:\n                os.remove(filePath)\n                break\n            except:\n                time.sleep(1) # try to sleep to make the time for the file not be used anymore\n                print \"exception: n  %s, n  %s, n  %s n  when trying to remove file %s\" % (sys.exc_info()[0], sys.exc_info()[1], sys.exc_info()[2], filePath)\n            removeRetryCount += 1\n        return\n    fo.close()",
        "code_language": "Python"
      }
    ],
    "title": "Pickling (serialization) in Python",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}