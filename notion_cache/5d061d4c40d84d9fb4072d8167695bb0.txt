4758 1565326182941 httpcache-v1
Method: POST
URL: https://www.notion.so/api/v3/getRecordValues
Body:+110
{
  "requests": [
    {
      "id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
      "table": "block"
    }
  ]
}
Response:+3609
{
  "results": [
    {
      "role": "comment_only",
      "value": {
        "alive": true,
        "content": [
          "9e7ca150-d3df-48c8-ac99-66c9f65ca464",
          "ffd0603f-ccd5-4deb-b3df-8f318e4e794a",
          "10a4d5b7-faa2-452d-b8be-14edcd66c5ab",
          "97f6f16b-92d9-4ccf-86bf-642a2b7221ed",
          "283a98fe-2141-42bf-82db-d92af29b41c0",
          "fb6e0536-4117-4dff-b69d-2a71f094262e",
          "1e00396d-1ad8-4023-a8b1-74362c5e7974",
          "61609c70-fc82-4621-b82f-094e29cd4eb4",
          "8db59938-c919-45c6-8998-a735ff4d3d7b",
          "c2b2e713-2082-45f0-addd-353212f7a357",
          "94398e10-73e3-4462-a0e4-30da0dc17255",
          "cd478f4b-0a79-453a-bb7c-2f95d52e21f9",
          "02d26d37-5a2e-4731-88ea-325019ea53b6",
          "bc2ea51f-79de-46a3-bd6f-487df815c227",
          "799d7f00-3d2a-4ffe-9cff-309e0ec52409",
          "e559621b-4ce9-42ce-b492-d8ce59d1bbff",
          "129b2a10-afb0-4a4d-a02a-a65cff72e713",
          "55b23beb-87fb-4f8a-b859-844977163f88",
          "d9dd2943-491f-4efa-943d-de7d028a7735",
          "6cca1cda-d755-41be-b630-6ba0c9aa855a",
          "a50d022b-063a-47f2-9ecc-775df8e4e6cd",
          "6fbb3af8-78a9-43ca-8f61-597c61702e6b",
          "374b5ca2-99d3-4a1e-a76d-b795a82a59c1",
          "e8a97378-a6d5-40c4-9740-60e772f5b7c3",
          "92ae5874-e137-4ee2-80af-2f045ace9d89",
          "9a0c2d75-3a80-411a-9a7b-e4f7232fd7bf",
          "70463c79-35c1-4f47-97df-03070457e6be",
          "7c35d0e3-6f8b-49ea-a5c8-240f0f0d8400",
          "8fcbb63e-fc33-4c9a-a18a-433d26d01ce3",
          "8b9a21ab-fe85-43d7-91b6-befd6b2b8a73",
          "8423617b-821a-4e4d-8884-26c8f87250d8",
          "b7e86d80-a67b-4fca-88f6-39bf881bffcd",
          "b20f6ddb-56ce-4890-ac11-3a6cbed2f494",
          "170713b0-4b34-4277-85c2-d54447d5808a",
          "0eb046aa-98ed-4b9e-9e5d-c1440bd61181",
          "9a540fe5-8ba0-4e8b-b66a-dc5f8a01a75d",
          "81622a73-ff87-477e-98d9-985b04745abb",
          "697e3183-ce92-41c6-84fa-dac065e30449",
          "15a40aa8-565a-43d6-bb3e-6a25e464e5db",
          "754a6855-8474-4d5b-a9ed-0cdc0557a712",
          "1ffce3af-b20c-4c77-b81b-6ce04765eca9",
          "0cc9d997-73e5-49a0-b471-4d0a0c60d612",
          "daffe516-26ba-4218-a285-db31c70a12a7",
          "7cd8dc1b-9d6b-4ce0-9f26-882876934733",
          "604a99be-2ce7-4b4e-84a9-db56092950c3",
          "314197b8-f00c-4fbe-99e3-215634b0da5a",
          "938d3ab0-9e88-4d04-9787-b48faf400f9f",
          "e99bb5f5-cbc6-4186-a96b-dace951e0739",
          "09566b40-1db3-409c-883a-554a84f494fd",
          "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a",
          "9ffa0eb4-5fc3-4190-9523-d61f9faf7215",
          "96fe4183-2bd9-49f0-8731-a465b966db34",
          "20200eaa-2b87-4ea2-b0fd-5b06f9431807",
          "f7634c8b-a61b-4709-977e-630987fb5752",
          "6781104f-687f-477e-8b1a-e1ff33db91ad"
        ],
        "copied_from": "d4fc1c88-e604-4cb0-8f39-6107bf1d766c",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736917150,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532996165682,
        "parent_id": "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Speeding up Go with custom allocators"
            ]
          ]
        },
        "type": "page",
        "version": 8
      }
    }
  ]
}
HeadersJSON:+931
{
  "Cf-Ray": [
    "50371add9de07fb4-SAN"
  ],
  "Content-Type": [
    "application/json; charset=utf-8"
  ],
  "Date": [
    "Fri, 09 Aug 2019 04:49:42 GMT"
  ],
  "Etag": [
    "W/\"a94-BpA6JvSjBFugcWtGqebXq41cww4\""
  ],
  "Expect-Ct": [
    "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
  ],
  "Referrer-Policy": [
    "same-origin"
  ],
  "Server": [
    "cloudflare"
  ],
  "Set-Cookie": [
    "__cfduid=db40dd0803e2ed0cac2b1262d8c9369f71565326182; expires=Sat, 08-Aug-20 04:49:42 GMT; path=/; domain=.notion.so; HttpOnly"
  ],
  "Strict-Transport-Security": [
    "max-age=5184000; includeSubDomains"
  ],
  "Vary": [
    "Accept-Encoding"
  ],
  "X-Content-Type-Options": [
    "nosniff"
  ],
  "X-Dns-Prefetch-Control": [
    "off"
  ],
  "X-Download-Options": [
    "noopen"
  ],
  "X-Frame-Options": [
    "SAMEORIGIN"
  ],
  "X-Xss-Protection": [
    "1; mode=block"
  ]
}
58376 1565326182944 httpcache-v1
Method: POST
URL: https://www.notion.so/api/v3/loadPageChunk
Body:+152
{
  "chunkNumber": 0,
  "cursor": {
    "stack": []
  },
  "limit": 50,
  "pageId": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
  "verticalColumns": false
}
Response:+57185
{
  "cursor": {
    "stack": [
      [
        {
          "id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "index": 50,
          "table": "block"
        }
      ],
      [
        {
          "id": "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a",
          "index": 0,
          "table": "block"
        }
      ]
    ]
  },
  "recordMap": {
    "block": {
      "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4239c5b5-0df2-4db0-88c8-c00ad6e67d08",
            "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
            "8f71eea9-e045-4c45-8c38-3f323dc794cd",
            "6a89b20b-0c0b-4fb6-98a3-8d0ca381dcf0",
            "0a694781-2e36-4c42-bb01-5b8d7f9e3952",
            "b0e651eb-420e-411f-9305-1323bba8536d",
            "cad29e34-5e6c-46ae-80e8-820d030ceaeb",
            "10cad72c-7757-4403-b767-2eb16b5505a5",
            "31cf3597-4bdf-46ea-9819-6cd969d6ecdd",
            "e287a852-cce0-42a7-b013-a6325864be88"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736916862,
          "id": "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1554268260000,
          "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "2012 (10)"
              ]
            ]
          },
          "type": "toggle",
          "version": 29
        }
      },
      "02d26d37-5a2e-4731-88ea-325019ea53b6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "02d26d37-5a2e-4731-88ea-325019ea53b6",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531817425760,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "language": [
              [
                "Go"
              ]
            ],
            "title": [
              [
                "type struct Node {\n int item\n left, right *Node\n}"
              ]
            ]
          },
          "type": "code",
          "version": 3
        }
      },
      "09566b40-1db3-409c-883a-554a84f494fd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "09566b40-1db3-409c-883a-554a84f494fd",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "In this particular benchmark there are many Node objects and they never die, so they are promoted to rarely collected arena for old objects and each collection is cheaper because it only looks at a small number of recently allocated Node objects."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "0cc9d997-73e5-49a0-b471-4d0a0c60d612": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "0cc9d997-73e5-49a0-b471-4d0a0c60d612",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "How come Java is so much faster?"
              ]
            ]
          },
          "type": "sub_header",
          "version": 1
        }
      },
      "0eb046aa-98ed-4b9e-9e5d-c1440bd61181": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "0eb046aa-98ed-4b9e-9e5d-c1440bd61181",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Remaining changes to the code involve adding "
              ],
              [
                "NodeFromId()",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " call in a few places."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "10a4d5b7-faa2-452d-b8be-14edcd66c5ab": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917150,
          "id": "10a4d5b7-faa2-452d-b8be-14edcd66c5ab",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917150,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Date: 2012-11-26T12:17:53-08:00"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "129b2a10-afb0-4a4d-a02a-a65cff72e713": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917152,
          "id": "129b2a10-afb0-4a4d-a02a-a65cff72e713",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917152,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "In garbage-collected languages allocation is actually very cheap. In a good allocator it’s just a single arithmetic operation to bump a pointer, which is orders of magnitude cheaper than even the best "
              ],
              [
                "malloc()",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " implementation. "
              ],
              [
                "Malloc()",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " has to maintain data structures to keep track of allocated memory so that "
              ],
              [
                "free()",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " can return it back to the OS."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "15a40aa8-565a-43d6-bb3e-6a25e464e5db": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "15a40aa8-565a-43d6-bb3e-6a25e464e5db",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The biggest drawback is that we lost ability to free objects. Memory we’ve allocated will never be returned to the OS until the program exits."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "170713b0-4b34-4277-85c2-d54447d5808a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "170713b0-4b34-4277-85c2-d54447d5808a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531817435451,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "language": [
              [
                "Go"
              ]
            ],
            "title": [
              [
                "const nodes_per_bucket = 1024 * 1024\n\nvar (\n  all_nodes [][]Node = make([][]Node, 0)\n  nodes_left int = 0\n  curr_node_id int = 0\n)\n\nfunc NodeFromId(id NodeId) *Node {\n  n := int(id) - 1\n  bucket := n / nodes_per_bucket\n  el := n % nodes_per_bucket\n  return \u0026all_nodes[bucket][el]\n}\n\nfunc allocNode(item int, left, right NodeId) NodeId {\n  if 0 == nodes_left {\n    new_nodes := make([]Node, nodes_per_bucket, nodes_per_bucket)\n    all_nodes = append(all_nodes, new_nodes)\n    nodes_left = nodes_per_bucket\n  }\n  nodes_left -= 1\n  node := NodeFromId(NodeId(curr_node_id + 1))\n  node.item = item\n  node.left = left\n  node.right = right\n\n  curr_node_id += 1\n  return NodeId(curr_node_id)\n}"
              ]
            ]
          },
          "type": "code",
          "version": 3
        }
      },
      "1e00396d-1ad8-4023-a8b1-74362c5e7974": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "1e00396d-1ad8-4023-a8b1-74362c5e7974",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "type": "text",
          "version": 1
        }
      },
      "1ffce3af-b20c-4c77-b81b-6ce04765eca9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "1ffce3af-b20c-4c77-b81b-6ce04765eca9",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "In different code this could be a much bigger issue. There are ways to free memory even with custom allocators but they require more complexity and evolve towards implementing a custom garbage collector at which point it might be better to go back to simple code and leave the work to built-in garbage collector."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "3daeddb7-7fa9-4271-ba58-6116b66c2490",
            "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
            "7495260a-1daa-4611-8858-ad2e049e77e6",
            "8d2ca772-ff28-4b99-b60c-42d84b7a2997",
            "ac23f6cd-d3b5-43b3-b89d-9f68e00435b8",
            "e79db1cb-2fcf-4329-ac37-591bfbb00782",
            "4d625835-41be-43c9-b94b-a87da9feeee7",
            "ed25f870-79cc-4b0b-9080-460e062053e4",
            "d18cd62f-7c3c-4bda-a4bb-b4fed138034c",
            "395f6c6a-f50d-44e4-8919-a45fcc064d3e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1530921610129,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1554522240000,
          "parent_id": "568ac4c0-64c3-4ef6-a6ad-0b8d77230681",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Words written by me"
              ]
            ]
          },
          "type": "page",
          "version": 252
        }
      },
      "283a98fe-2141-42bf-82db-d92af29b41c0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "283a98fe-2141-42bf-82db-d92af29b41c0",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Collection: go-cookbook"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "300db9dc-27c8-4958-a08b-8d0c37f4cfe5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "8999d1d7-32c7-4061-b439-ff9efd8f8a70",
            "f2b5a87e-5547-401f-9c18-62b0ca1986ab",
            "56757391-fba8-45bc-8551-262f3c9f81f2",
            "20614047-3601-4b54-bd82-edd8b58e6b43",
            "1e4d284d-ffef-4b22-8dc7-3b1d63ac893e",
            "4c862145-0d29-4c9f-9c1c-cc1568f9169c",
            "981d650d-2df1-4162-a739-d788c628cdcf",
            "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17",
            "dfeb5b7b-d784-4cc4-9e74-19e6c5eab4e3",
            "b059308f-5cc3-43fb-af19-9c71ae359418",
            "11703b89-1c9f-48ad-ae04-7eb3f6a2f004",
            "ba2e39ae-fb47-4fc7-9d89-54d8f734476f",
            "7a545f91-66c3-48a9-a0b7-00e83dffeafa",
            "829c38ff-a5e8-4ed5-97a4-d1cd2f07c60c",
            "776c926a-0b10-44b0-9fdd-c95c6ec06a7d",
            "3f75d60c-97da-4648-a30a-55d7d47ec6a6",
            "e7fe71cf-ab3b-4daa-a0d5-54ec953c9d08",
            "7e948259-8dd7-4bf7-8f03-a7833279f444",
            "05edcfe1-f986-4c8e-bc27-dd49d25e079c"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1530157233456,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1556683800000,
          "parent_id": "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [
              [
                "blog posts"
              ]
            ]
          },
          "type": "page",
          "version": 1972
        }
      },
      "314197b8-f00c-4fbe-99e3-215634b0da5a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "314197b8-f00c-4fbe-99e3-215634b0da5a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It has been observed that most objects die young. Generational garbage collector allocates objects in nursery. Most collections only collect objects in nursery. Objects that survived collections in nursery are moved to the second arena for old objects, which is collected at a much lower rate."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "374b5ca2-99d3-4a1e-a76d-b795a82a59c1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917153,
          "id": "374b5ca2-99d3-4a1e-a76d-b795a82a59c1",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917153,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Knowing what the problem is, we know what the solution should be:"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "55b23beb-87fb-4f8a-b859-844977163f88": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917152,
          "id": "55b23beb-87fb-4f8a-b859-844977163f88",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917152,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "More complicated reality is that it’s garbage collection phase that is expensive."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "568ac4c0-64c3-4ef6-a6ad-0b8d77230681": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "08e19004-306b-413a-ba6e-0e86a10fec7a",
            "623523b6-7e15-48a0-b525-749d6921465c",
            "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65",
            "d61b4f94-b10d-4d80-8d3d-238a4e7c4d10",
            "4da97980-9fb6-45cb-886a-51c656751d35",
            "aea20e01-890c-4874-ae08-4557d7789195",
            "c9bef0f1-c8fe-40a2-bc8b-06ace2bd7d8f",
            "ee0eee35-e706-4e75-9b2f-69d1d03125b2",
            "9a07ca64-c0c1-4dc0-9e8b-d134b348678d",
            "db9e9c03-e3e8-4287-a51d-4da5d507138b",
            "c5210d90-4251-437b-95d8-87da49bd8706",
            "ec1723d0-39f3-4a5c-a305-68a0deb2ad76",
            "e4132d5a-4401-4b2a-ad81-d8158c803ad1",
            "03ece883-f7df-4ce7-8596-73d04811479e",
            "36859b86-c5ac-423e-a037-4f3a4331b814"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1528059171080,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "568ac4c0-64c3-4ef6-a6ad-0b8d77230681",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1555525560000,
          "parent_id": "bc202e06-6caa-4e3f-81eb-f226ab5deef7",
          "parent_table": "space",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            },
            {
              "allow_duplicate": false,
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [
              [
                "Website"
              ]
            ]
          },
          "type": "page",
          "version": 370
        }
      },
      "5d061d4c-40d8-4d9f-b407-2d8167695bb0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "9e7ca150-d3df-48c8-ac99-66c9f65ca464",
            "ffd0603f-ccd5-4deb-b3df-8f318e4e794a",
            "10a4d5b7-faa2-452d-b8be-14edcd66c5ab",
            "97f6f16b-92d9-4ccf-86bf-642a2b7221ed",
            "283a98fe-2141-42bf-82db-d92af29b41c0",
            "fb6e0536-4117-4dff-b69d-2a71f094262e",
            "1e00396d-1ad8-4023-a8b1-74362c5e7974",
            "61609c70-fc82-4621-b82f-094e29cd4eb4",
            "8db59938-c919-45c6-8998-a735ff4d3d7b",
            "c2b2e713-2082-45f0-addd-353212f7a357",
            "94398e10-73e3-4462-a0e4-30da0dc17255",
            "cd478f4b-0a79-453a-bb7c-2f95d52e21f9",
            "02d26d37-5a2e-4731-88ea-325019ea53b6",
            "bc2ea51f-79de-46a3-bd6f-487df815c227",
            "799d7f00-3d2a-4ffe-9cff-309e0ec52409",
            "e559621b-4ce9-42ce-b492-d8ce59d1bbff",
            "129b2a10-afb0-4a4d-a02a-a65cff72e713",
            "55b23beb-87fb-4f8a-b859-844977163f88",
            "d9dd2943-491f-4efa-943d-de7d028a7735",
            "6cca1cda-d755-41be-b630-6ba0c9aa855a",
            "a50d022b-063a-47f2-9ecc-775df8e4e6cd",
            "6fbb3af8-78a9-43ca-8f61-597c61702e6b",
            "374b5ca2-99d3-4a1e-a76d-b795a82a59c1",
            "e8a97378-a6d5-40c4-9740-60e772f5b7c3",
            "92ae5874-e137-4ee2-80af-2f045ace9d89",
            "9a0c2d75-3a80-411a-9a7b-e4f7232fd7bf",
            "70463c79-35c1-4f47-97df-03070457e6be",
            "7c35d0e3-6f8b-49ea-a5c8-240f0f0d8400",
            "8fcbb63e-fc33-4c9a-a18a-433d26d01ce3",
            "8b9a21ab-fe85-43d7-91b6-befd6b2b8a73",
            "8423617b-821a-4e4d-8884-26c8f87250d8",
            "b7e86d80-a67b-4fca-88f6-39bf881bffcd",
            "b20f6ddb-56ce-4890-ac11-3a6cbed2f494",
            "170713b0-4b34-4277-85c2-d54447d5808a",
            "0eb046aa-98ed-4b9e-9e5d-c1440bd61181",
            "9a540fe5-8ba0-4e8b-b66a-dc5f8a01a75d",
            "81622a73-ff87-477e-98d9-985b04745abb",
            "697e3183-ce92-41c6-84fa-dac065e30449",
            "15a40aa8-565a-43d6-bb3e-6a25e464e5db",
            "754a6855-8474-4d5b-a9ed-0cdc0557a712",
            "1ffce3af-b20c-4c77-b81b-6ce04765eca9",
            "0cc9d997-73e5-49a0-b471-4d0a0c60d612",
            "daffe516-26ba-4218-a285-db31c70a12a7",
            "7cd8dc1b-9d6b-4ce0-9f26-882876934733",
            "604a99be-2ce7-4b4e-84a9-db56092950c3",
            "314197b8-f00c-4fbe-99e3-215634b0da5a",
            "938d3ab0-9e88-4d04-9787-b48faf400f9f",
            "e99bb5f5-cbc6-4186-a96b-dace951e0739",
            "09566b40-1db3-409c-883a-554a84f494fd",
            "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a",
            "9ffa0eb4-5fc3-4190-9523-d61f9faf7215",
            "96fe4183-2bd9-49f0-8731-a465b966db34",
            "20200eaa-2b87-4ea2-b0fd-5b06f9431807",
            "f7634c8b-a61b-4709-977e-630987fb5752",
            "6781104f-687f-477e-8b1a-e1ff33db91ad"
          ],
          "copied_from": "d4fc1c88-e604-4cb0-8f39-6107bf1d766c",
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917150,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1532996165682,
          "parent_id": "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Speeding up Go with custom allocators"
              ]
            ]
          },
          "type": "page",
          "version": 8
        }
      },
      "604a99be-2ce7-4b4e-84a9-db56092950c3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "604a99be-2ce7-4b4e-84a9-db56092950c3",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Java, unlike Go, uses generational garbage collector, which has 2 arenas: one for young (newly allocated) objects (called nursery) and one for old objects."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "61609c70-fc82-4621-b82f-094e29cd4eb4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "61609c70-fc82-4621-b82f-094e29cd4eb4",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Summary",
                [
                  [
                    "b"
                  ]
                ]
              ],
              [
                ": using a custom allocator I was able to speed up an allocation heavy program ("
              ],
              [
                "binary-trees benchmark",
                [
                  [
                    "a",
                    "http://benchmarksgame.alioth.debian.org/u64q/binarytrees.html"
                  ]
                ]
              ],
              [
                ") ~4x."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "697e3183-ce92-41c6-84fa-dac065e30449": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "697e3183-ce92-41c6-84fa-dac065e30449",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Drawbacks of custom allocators"
              ]
            ]
          },
          "type": "sub_header",
          "version": 1
        }
      },
      "6cca1cda-d755-41be-b630-6ba0c9aa855a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917152,
          "id": "6cca1cda-d755-41be-b630-6ba0c9aa855a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917152,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "There are 2 insights we get from knowing how garbage collection works internally:"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "6fbb3af8-78a9-43ca-8f61-597c61702e6b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917152,
          "id": "6fbb3af8-78a9-43ca-8f61-597c61702e6b",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917152,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "the more pointers we need to chase, the more expensive gc is"
              ]
            ]
          },
          "type": "bulleted_list",
          "version": 1
        }
      },
      "70463c79-35c1-4f47-97df-03070457e6be": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917153,
          "id": "70463c79-35c1-4f47-97df-03070457e6be",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917153,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Speeding binary-trees shootout benchmark"
              ]
            ]
          },
          "type": "sub_header",
          "version": 1
        }
      },
      "754a6855-8474-4d5b-a9ed-0cdc0557a712": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "754a6855-8474-4d5b-a9ed-0cdc0557a712",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It’s not a problem in this case, since the tree only grows and the program ends when it’s done."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "799d7f00-3d2a-4ffe-9cff-309e0ec52409": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "799d7f00-3d2a-4ffe-9cff-309e0ec52409",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Improving allocation-heavy code"
              ]
            ]
          },
          "type": "sub_header",
          "version": 1
        }
      },
      "7c35d0e3-6f8b-49ea-a5c8-240f0f0d8400": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917153,
          "id": "7c35d0e3-6f8b-49ea-a5c8-240f0f0d8400",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917153,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "We said that we should avoid pointers, so that garbage collector doesn’t have to chase them. The new definition of "
              ],
              [
                "Node",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " struct is:"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "7cd8dc1b-9d6b-4ce0-9f26-882876934733": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "7cd8dc1b-9d6b-4ce0-9f26-882876934733",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "I can only speculate."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "81622a73-ff87-477e-98d9-985b04745abb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "81622a73-ff87-477e-98d9-985b04745abb",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Another minor advantage if using integers instead of pointers in Node struct is that on 64-bit machines we use only 4 bytes for an int vs. 8 bytes for a pointer."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "8423617b-821a-4e4d-8884-26c8f87250d8": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917154,
          "id": "8423617b-821a-4e4d-8884-26c8f87250d8",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917154,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "What "
              ],
              [
                "NodeId",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " means is up to us to define and we define it thusly: it’s an index into a "
              ],
              [
                "[]Node",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " array. That array is the backing store (i.e. allocator) for our nodes."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "8b9a21ab-fe85-43d7-91b6-befd6b2b8a73": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917154,
          "id": "8b9a21ab-fe85-43d7-91b6-befd6b2b8a73",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917154,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "We changed "
              ],
              [
                "left",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " and "
              ],
              [
                "right",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " fields from "
              ],
              [
                "*Node",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " to an alias type "
              ],
              [
                "NodeId",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                ", which is just a unique integer representing a node."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "8db59938-c919-45c6-8998-a735ff4d3d7b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "8db59938-c919-45c6-8998-a735ff4d3d7b",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Allocation is expensive. It holds true for all languages. At the time of this writing, Go (version 1.0.3) doesn’t have a garbage collector that is as sophisticated as, say, garbage collector in JVM. There’s work being done to improve Go’s GC but today allocations in Go are not as cheap as they could be."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "8fcbb63e-fc33-4c9a-a18a-433d26d01ce3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917153,
          "id": "8fcbb63e-fc33-4c9a-a18a-433d26d01ce3",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531817430634,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "language": [
              [
                "Go"
              ]
            ],
            "title": [
              [
                "type NodeId int\n\ntype struct Node {\n int item\n left, right NodeId\n}"
              ]
            ]
          },
          "type": "code",
          "version": 3
        }
      },
      "92ae5874-e137-4ee2-80af-2f045ace9d89": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917153,
          "id": "92ae5874-e137-4ee2-80af-2f045ace9d89",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917153,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "don’t use pointers"
              ]
            ]
          },
          "type": "bulleted_list",
          "version": 1
        }
      },
      "938d3ab0-9e88-4d04-9787-b48faf400f9f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "938d3ab0-9e88-4d04-9787-b48faf400f9f",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Go collector is a simpler mark-and-sweep collector which has to scan all allocated objects during every collection."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "94398e10-73e3-4462-a0e4-30da0dc17255": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "94398e10-73e3-4462-a0e4-30da0dc17255",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "I was able to speed up Go code by about 4x by using a custom allocator."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "97f6f16b-92d9-4ccf-86bf-642a2b7221ed": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917150,
          "id": "97f6f16b-92d9-4ccf-86bf-642a2b7221ed",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917150,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "HeaderImage: gfx/headers/header-07.jpg"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "9a0c2d75-3a80-411a-9a7b-e4f7232fd7bf": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917153,
          "id": "9a0c2d75-3a80-411a-9a7b-e4f7232fd7bf",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917153,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "As it happens, the majority of the 4x speedup I got in this particular benchmark came from not using pointers"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "9a540fe5-8ba0-4e8b-b66a-dc5f8a01a75d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "9a540fe5-8ba0-4e8b-b66a-dc5f8a01a75d",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "You can compare "
              ],
              [
                "original",
                [
                  [
                    "a",
                    "https://github.com/kjk/kjkpub/blob/master/gobench/bintree.go"
                  ]
                ]
              ],
              [
                " to my "
              ],
              [
                "faster version",
                [
                  [
                    "a",
                    "https://github.com/kjk/kjkpub/blob/master/gobench/bintree3.go"
                  ]
                ]
              ],
              [
                "."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "9e7ca150-d3df-48c8-ac99-66c9f65ca464": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917150,
          "id": "9e7ca150-d3df-48c8-ac99-66c9f65ca464",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917150,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Id: 1407031"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "a50d022b-063a-47f2-9ecc-775df8e4e6cd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917152,
          "id": "a50d022b-063a-47f2-9ecc-775df8e4e6cd",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917152,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "the more objects there are, the more expensive garbage collection is"
              ]
            ]
          },
          "type": "bulleted_list",
          "version": 1
        }
      },
      "b20f6ddb-56ce-4890-ac11-3a6cbed2f494": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "b20f6ddb-56ce-4890-ac11-3a6cbed2f494",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Our implementation is a bit more sophisticated. In Go it’s easy to extend the array with "
              ],
              [
                "append()",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " but it involves memory copy. We avoid that by pre-allocating nodes in buckets and using an array of arrays for storage. The code is still relatively simple:"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "There’s hope for Go, though. The implementors are aware that garbage collector is not as good as it could be and there is an ongoing work on implementing a better one."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "b7e86d80-a67b-4fca-88f6-39bf881bffcd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917154,
          "id": "b7e86d80-a67b-4fca-88f6-39bf881bffcd",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917154,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "When we need to allocate another node, we expand the "
              ],
              [
                "[]Node",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " array and return the index to that node. We can trivially map "
              ],
              [
                "NodeId",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " to "
              ],
              [
                "*Node",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " by doing "
              ],
              [
                "\u0026array[nodeId]",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                "."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "bc2ea51f-79de-46a3-bd6f-487df815c227": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "bc2ea51f-79de-46a3-bd6f-487df815c227",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "To allocate a new node we use "
              ],
              [
                "\u0026Node{item, left, right}",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                "."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "c2b2e713-2082-45f0-addd-353212f7a357": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "c2b2e713-2082-45f0-addd-353212f7a357",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This can be seen in binary-trees benchmark which has almost no computation but millions of allocations of small objects. As a result, Java implementation is about 7x faster."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "cd478f4b-0a79-453a-bb7c-2f95d52e21f9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "cd478f4b-0a79-453a-bb7c-2f95d52e21f9",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The benchmark builds a large binary tree composed of nodes:"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "d9dd2943-491f-4efa-943d-de7d028a7735": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917152,
          "id": "d9dd2943-491f-4efa-943d-de7d028a7735",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917152,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Garbage collection (gc) is triggered every once in a while. It recursively scans all the allocated objects, starting from known roots and chasing pointers. It figures out which objects are not referenced by any other object and frees them (this is the “garbage” in garbage collection that has just been collected)."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "daffe516-26ba-4218-a285-db31c70a12a7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917155,
          "id": "daffe516-26ba-4218-a285-db31c70a12a7",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917155,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It’s a valid question: both Java and Go have garbage collectors, why is Java’s so much better on this benchmark?"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "e559621b-4ce9-42ce-b492-d8ce59d1bbff": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917152,
          "id": "e559621b-4ce9-42ce-b492-d8ce59d1bbff",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917152,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "First, a correction. When I said that allocation is expensive, I over-simplified."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "e8a97378-a6d5-40c4-9740-60e772f5b7c3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917153,
          "id": "e8a97378-a6d5-40c4-9740-60e772f5b7c3",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917153,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "allocate less objects (e.g. by allocating them in bulk or re-using previously allocated objects)"
              ]
            ]
          },
          "type": "bulleted_list",
          "version": 1
        }
      },
      "e99bb5f5-cbc6-4186-a96b-dace951e0739": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "e99bb5f5-cbc6-4186-a96b-dace951e0739",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Generational garbage collectors have overhead because they have to copy objects in memory and update references between objects when that happens. On the other hand they can also compact memory, improving caching and they scan a smaller number of objects during each collection."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "fb6e0536-4117-4dff-b69d-2a71f094262e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917151,
          "id": "fb6e0536-4117-4dff-b69d-2a71f094262e",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917151,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Description: Speeding up a well-known benchmark (construction of binary trees) ~4x by optimizing memory allocations. "
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "ffd0603f-ccd5-4deb-b3df-8f318e4e794a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917150,
          "id": "ffd0603f-ccd5-4deb-b3df-8f318e4e794a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917150,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Tags: go, programming"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      }
    },
    "notion_user": {
      "bb760e2d-d679-4b64-b2a9-03005b21870a": {
        "role": "reader",
        "value": {
          "clipper_onboarding_completed": true,
          "email": "kkowalczyk@gmail.com",
          "family_name": "Kowalczyk",
          "given_name": "Krzysztof",
          "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "mobile_onboarding_completed": true,
          "onboarding_completed": true,
          "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
          "version": 176
        }
      }
    },
    "space": {}
  }
}
HeadersJSON:+932
{
  "Cf-Ray": [
    "50371ade0e107fb4-SAN"
  ],
  "Content-Type": [
    "application/json; charset=utf-8"
  ],
  "Date": [
    "Fri, 09 Aug 2019 04:49:42 GMT"
  ],
  "Etag": [
    "W/\"8e15-90l7qKKemAO5KJybEqUb4mqMEmk\""
  ],
  "Expect-Ct": [
    "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
  ],
  "Referrer-Policy": [
    "same-origin"
  ],
  "Server": [
    "cloudflare"
  ],
  "Set-Cookie": [
    "__cfduid=db40dd0803e2ed0cac2b1262d8c9369f71565326182; expires=Sat, 08-Aug-20 04:49:42 GMT; path=/; domain=.notion.so; HttpOnly"
  ],
  "Strict-Transport-Security": [
    "max-age=5184000; includeSubDomains"
  ],
  "Vary": [
    "Accept-Encoding"
  ],
  "X-Content-Type-Options": [
    "nosniff"
  ],
  "X-Dns-Prefetch-Control": [
    "off"
  ],
  "X-Download-Options": [
    "noopen"
  ],
  "X-Frame-Options": [
    "SAMEORIGIN"
  ],
  "X-Xss-Protection": [
    "1; mode=block"
  ]
}
18522 1565326182945 httpcache-v1
Method: POST
URL: https://www.notion.so/api/v3/loadPageChunk
Body:+441
{
  "chunkNumber": 1,
  "cursor": {
    "stack": [
      [
        {
          "id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "index": 50,
          "table": "block"
        }
      ],
      [
        {
          "id": "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a",
          "index": 0,
          "table": "block"
        }
      ]
    ]
  },
  "limit": 30,
  "pageId": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
  "verticalColumns": false
}
Response:+17042
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4239c5b5-0df2-4db0-88c8-c00ad6e67d08",
            "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
            "8f71eea9-e045-4c45-8c38-3f323dc794cd",
            "6a89b20b-0c0b-4fb6-98a3-8d0ca381dcf0",
            "0a694781-2e36-4c42-bb01-5b8d7f9e3952",
            "b0e651eb-420e-411f-9305-1323bba8536d",
            "cad29e34-5e6c-46ae-80e8-820d030ceaeb",
            "10cad72c-7757-4403-b767-2eb16b5505a5",
            "31cf3597-4bdf-46ea-9819-6cd969d6ecdd",
            "e287a852-cce0-42a7-b013-a6325864be88"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736916862,
          "id": "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1554268260000,
          "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "2012 (10)"
              ]
            ]
          },
          "type": "toggle",
          "version": 29
        }
      },
      "20200eaa-2b87-4ea2-b0fd-5b06f9431807": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "20200eaa-2b87-4ea2-b0fd-5b06f9431807",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Back in the day when I was working on Poppler, I achieved a significant ~19% speedup by "
              ],
              [
                "improving a string class",
                [
                  [
                    "a",
                    "/article/Performance-optimization-story.html"
                  ]
                ]
              ],
              [
                " to avoid an additional allocation in 90% of the cases. I now use this trick in my C++ code e.g. in "
              ],
              [
                "SumatraPDF code",
                [
                  [
                    "a",
                    "https://code.google.com/p/sumatrapdf/source/browse/trunk/src/utils/Vec.h"
                  ]
                ]
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "3daeddb7-7fa9-4271-ba58-6116b66c2490",
            "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
            "7495260a-1daa-4611-8858-ad2e049e77e6",
            "8d2ca772-ff28-4b99-b60c-42d84b7a2997",
            "ac23f6cd-d3b5-43b3-b89d-9f68e00435b8",
            "e79db1cb-2fcf-4329-ac37-591bfbb00782",
            "4d625835-41be-43c9-b94b-a87da9feeee7",
            "ed25f870-79cc-4b0b-9080-460e062053e4",
            "d18cd62f-7c3c-4bda-a4bb-b4fed138034c",
            "395f6c6a-f50d-44e4-8919-a45fcc064d3e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1530921610129,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1554522240000,
          "parent_id": "568ac4c0-64c3-4ef6-a6ad-0b8d77230681",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Words written by me"
              ]
            ]
          },
          "type": "page",
          "version": 252
        }
      },
      "300db9dc-27c8-4958-a08b-8d0c37f4cfe5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "8999d1d7-32c7-4061-b439-ff9efd8f8a70",
            "f2b5a87e-5547-401f-9c18-62b0ca1986ab",
            "56757391-fba8-45bc-8551-262f3c9f81f2",
            "20614047-3601-4b54-bd82-edd8b58e6b43",
            "1e4d284d-ffef-4b22-8dc7-3b1d63ac893e",
            "4c862145-0d29-4c9f-9c1c-cc1568f9169c",
            "981d650d-2df1-4162-a739-d788c628cdcf",
            "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17",
            "dfeb5b7b-d784-4cc4-9e74-19e6c5eab4e3",
            "b059308f-5cc3-43fb-af19-9c71ae359418",
            "11703b89-1c9f-48ad-ae04-7eb3f6a2f004",
            "ba2e39ae-fb47-4fc7-9d89-54d8f734476f",
            "7a545f91-66c3-48a9-a0b7-00e83dffeafa",
            "829c38ff-a5e8-4ed5-97a4-d1cd2f07c60c",
            "776c926a-0b10-44b0-9fdd-c95c6ec06a7d",
            "3f75d60c-97da-4648-a30a-55d7d47ec6a6",
            "e7fe71cf-ab3b-4daa-a0d5-54ec953c9d08",
            "7e948259-8dd7-4bf7-8f03-a7833279f444",
            "05edcfe1-f986-4c8e-bc27-dd49d25e079c"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1530157233456,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1556683800000,
          "parent_id": "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [
              [
                "blog posts"
              ]
            ]
          },
          "type": "page",
          "version": 1972
        }
      },
      "568ac4c0-64c3-4ef6-a6ad-0b8d77230681": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "08e19004-306b-413a-ba6e-0e86a10fec7a",
            "623523b6-7e15-48a0-b525-749d6921465c",
            "25a256f9-0ce4-4eb7-8839-0ecc3cf9cd65",
            "d61b4f94-b10d-4d80-8d3d-238a4e7c4d10",
            "4da97980-9fb6-45cb-886a-51c656751d35",
            "aea20e01-890c-4874-ae08-4557d7789195",
            "c9bef0f1-c8fe-40a2-bc8b-06ace2bd7d8f",
            "ee0eee35-e706-4e75-9b2f-69d1d03125b2",
            "9a07ca64-c0c1-4dc0-9e8b-d134b348678d",
            "db9e9c03-e3e8-4287-a51d-4da5d507138b",
            "c5210d90-4251-437b-95d8-87da49bd8706",
            "ec1723d0-39f3-4a5c-a305-68a0deb2ad76",
            "e4132d5a-4401-4b2a-ad81-d8158c803ad1",
            "03ece883-f7df-4ce7-8596-73d04811479e",
            "36859b86-c5ac-423e-a037-4f3a4331b814"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1528059171080,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "568ac4c0-64c3-4ef6-a6ad-0b8d77230681",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1555525560000,
          "parent_id": "bc202e06-6caa-4e3f-81eb-f226ab5deef7",
          "parent_table": "space",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            },
            {
              "allow_duplicate": false,
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [
              [
                "Website"
              ]
            ]
          },
          "type": "page",
          "version": 370
        }
      },
      "5d061d4c-40d8-4d9f-b407-2d8167695bb0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "9e7ca150-d3df-48c8-ac99-66c9f65ca464",
            "ffd0603f-ccd5-4deb-b3df-8f318e4e794a",
            "10a4d5b7-faa2-452d-b8be-14edcd66c5ab",
            "97f6f16b-92d9-4ccf-86bf-642a2b7221ed",
            "283a98fe-2141-42bf-82db-d92af29b41c0",
            "fb6e0536-4117-4dff-b69d-2a71f094262e",
            "1e00396d-1ad8-4023-a8b1-74362c5e7974",
            "61609c70-fc82-4621-b82f-094e29cd4eb4",
            "8db59938-c919-45c6-8998-a735ff4d3d7b",
            "c2b2e713-2082-45f0-addd-353212f7a357",
            "94398e10-73e3-4462-a0e4-30da0dc17255",
            "cd478f4b-0a79-453a-bb7c-2f95d52e21f9",
            "02d26d37-5a2e-4731-88ea-325019ea53b6",
            "bc2ea51f-79de-46a3-bd6f-487df815c227",
            "799d7f00-3d2a-4ffe-9cff-309e0ec52409",
            "e559621b-4ce9-42ce-b492-d8ce59d1bbff",
            "129b2a10-afb0-4a4d-a02a-a65cff72e713",
            "55b23beb-87fb-4f8a-b859-844977163f88",
            "d9dd2943-491f-4efa-943d-de7d028a7735",
            "6cca1cda-d755-41be-b630-6ba0c9aa855a",
            "a50d022b-063a-47f2-9ecc-775df8e4e6cd",
            "6fbb3af8-78a9-43ca-8f61-597c61702e6b",
            "374b5ca2-99d3-4a1e-a76d-b795a82a59c1",
            "e8a97378-a6d5-40c4-9740-60e772f5b7c3",
            "92ae5874-e137-4ee2-80af-2f045ace9d89",
            "9a0c2d75-3a80-411a-9a7b-e4f7232fd7bf",
            "70463c79-35c1-4f47-97df-03070457e6be",
            "7c35d0e3-6f8b-49ea-a5c8-240f0f0d8400",
            "8fcbb63e-fc33-4c9a-a18a-433d26d01ce3",
            "8b9a21ab-fe85-43d7-91b6-befd6b2b8a73",
            "8423617b-821a-4e4d-8884-26c8f87250d8",
            "b7e86d80-a67b-4fca-88f6-39bf881bffcd",
            "b20f6ddb-56ce-4890-ac11-3a6cbed2f494",
            "170713b0-4b34-4277-85c2-d54447d5808a",
            "0eb046aa-98ed-4b9e-9e5d-c1440bd61181",
            "9a540fe5-8ba0-4e8b-b66a-dc5f8a01a75d",
            "81622a73-ff87-477e-98d9-985b04745abb",
            "697e3183-ce92-41c6-84fa-dac065e30449",
            "15a40aa8-565a-43d6-bb3e-6a25e464e5db",
            "754a6855-8474-4d5b-a9ed-0cdc0557a712",
            "1ffce3af-b20c-4c77-b81b-6ce04765eca9",
            "0cc9d997-73e5-49a0-b471-4d0a0c60d612",
            "daffe516-26ba-4218-a285-db31c70a12a7",
            "7cd8dc1b-9d6b-4ce0-9f26-882876934733",
            "604a99be-2ce7-4b4e-84a9-db56092950c3",
            "314197b8-f00c-4fbe-99e3-215634b0da5a",
            "938d3ab0-9e88-4d04-9787-b48faf400f9f",
            "e99bb5f5-cbc6-4186-a96b-dace951e0739",
            "09566b40-1db3-409c-883a-554a84f494fd",
            "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a",
            "9ffa0eb4-5fc3-4190-9523-d61f9faf7215",
            "96fe4183-2bd9-49f0-8731-a465b966db34",
            "20200eaa-2b87-4ea2-b0fd-5b06f9431807",
            "f7634c8b-a61b-4709-977e-630987fb5752",
            "6781104f-687f-477e-8b1a-e1ff33db91ad"
          ],
          "copied_from": "d4fc1c88-e604-4cb0-8f39-6107bf1d766c",
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917150,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1532996165682,
          "parent_id": "019c7ce2-9fe3-4bd7-ae10-acb0833b9d17",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Speeding up Go with custom allocators"
              ]
            ]
          },
          "type": "page",
          "version": 8
        }
      },
      "6781104f-687f-477e-8b1a-e1ff33db91ad": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "6781104f-687f-477e-8b1a-e1ff33db91ad",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It’s a good trick to know."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "96fe4183-2bd9-49f0-8731-a465b966db34": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "96fe4183-2bd9-49f0-8731-a465b966db34",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Optimizing by reducing the amount of allocations or making allocations faster is applicable to non-gc languages as well, like C and C++, because "
              ],
              [
                "malloc()\\free()",
                [
                  [
                    "c"
                  ]
                ]
              ],
              [
                " are relatively slow functions."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "9ffa0eb4-5fc3-4190-9523-d61f9faf7215": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "9ffa0eb4-5fc3-4190-9523-d61f9faf7215",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A win in C++ as well"
              ]
            ]
          },
          "type": "sub_header",
          "version": 1
        }
      },
      "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "b2feb995-8abe-4fdf-a8c8-d99ae57dc06a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "There’s hope for Go, though. The implementors are aware that garbage collector is not as good as it could be and there is an ongoing work on implementing a better one."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "f7634c8b-a61b-4709-977e-630987fb5752": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1531736917156,
          "id": "f7634c8b-a61b-4709-977e-630987fb5752",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1531736917156,
          "parent_id": "5d061d4c-40d8-4d9f-b407-2d8167695bb0",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "I also managed to improve Poppler by another ~25% by using a simple, "
              ],
              [
                "custom allocator",
                [
                  [
                    "a",
                    "https://bugs.freedesktop.org/show_bug.cgi?id=7910"
                  ]
                ]
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      }
    },
    "notion_user": {
      "bb760e2d-d679-4b64-b2a9-03005b21870a": {
        "role": "reader",
        "value": {
          "clipper_onboarding_completed": true,
          "email": "kkowalczyk@gmail.com",
          "family_name": "Kowalczyk",
          "given_name": "Krzysztof",
          "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "mobile_onboarding_completed": true,
          "onboarding_completed": true,
          "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
          "version": 176
        }
      }
    },
    "space": {}
  }
}
HeadersJSON:+932
{
  "Cf-Ray": [
    "50371ade9e407fb4-SAN"
  ],
  "Content-Type": [
    "application/json; charset=utf-8"
  ],
  "Date": [
    "Fri, 09 Aug 2019 04:49:42 GMT"
  ],
  "Etag": [
    "W/\"2bd5-y9PeCEg1B94JL9hW/DT8lzLdJ2s\""
  ],
  "Expect-Ct": [
    "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
  ],
  "Referrer-Policy": [
    "same-origin"
  ],
  "Server": [
    "cloudflare"
  ],
  "Set-Cookie": [
    "__cfduid=db40dd0803e2ed0cac2b1262d8c9369f71565326182; expires=Sat, 08-Aug-20 04:49:42 GMT; path=/; domain=.notion.so; HttpOnly"
  ],
  "Strict-Transport-Security": [
    "max-age=5184000; includeSubDomains"
  ],
  "Vary": [
    "Accept-Encoding"
  ],
  "X-Content-Type-Options": [
    "nosniff"
  ],
  "X-Dns-Prefetch-Control": [
    "off"
  ],
  "X-Download-Options": [
    "noopen"
  ],
  "X-Frame-Options": [
    "SAMEORIGIN"
  ],
  "X-Xss-Protection": [
    "1; mode=block"
  ]
}
