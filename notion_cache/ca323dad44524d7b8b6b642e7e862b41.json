{
  "ID": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
  "Page": {
    "alive": true,
    "content": [
      "546b33b3-b118-474c-b2ef-810a48ce39c8",
      "fbf105cf-624f-4be4-ac64-4b5072f064ee",
      "f82635b8-a34c-4052-8e0d-280fef37d308",
      "0bdccd2c-9a17-4b72-a6c4-0ac11ee9be1c",
      "abf9c525-6e9c-47d4-89ad-5a0cfa44c61d",
      "42731c70-db54-4db9-bff7-d0389fe4ac8c",
      "641cb6c4-0f7d-43e3-b975-066be86eb3c8",
      "bcffa560-6dfa-43e6-b107-ce5fbd12e0f2",
      "3e48ff78-2261-4ef0-9c96-3d8eb34bba58",
      "a1b29e17-b1f2-4492-b871-5a5058c1a959"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531736828315,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531736828315,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Tip for verbose logging in Go"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "546b33b3-b118-474c-b2ef-810a48ce39c8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 12"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Id: 12"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "fbf105cf-624f-4be4-ac64-4b5072f064ee",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2014-12-03T18:21:29-08:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2014-12-03T18:21:29-08:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "f82635b8-a34c-4052-8e0d-280fef37d308",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: programming, go"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: programming, go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "0bdccd2c-9a17-4b72-a6c4-0ac11ee9be1c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "type": "text",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "abf9c525-6e9c-47d4-89ad-5a0cfa44c61d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go lacks a good ad-hoc debugging tool (i.e. a competent debugger)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go lacks a good ad-hoc debugging tool (i.e. a competent debugger)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "42731c70-db54-4db9-bff7-d0389fe4ac8c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For that reason we have to revert to caveman-style debugging: sprinkling the code with "
            ],
            [
              "fmt.Printf()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For that reason we have to revert to caveman-style debugging: sprinkling the code with "
          },
          {
            "Text": "fmt.Printf()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "641cb6c4-0f7d-43e3-b975-066be86eb3c8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The problem with this approach is lack of selectivity: imagine you have 100 tests and only 1 test fails. For debugging the issue you only need to see logs when executing that 1 test but you’ll drown in log output from all 100 tests."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The problem with this approach is lack of selectivity: imagine you have 100 tests and only 1 test fails. For debugging the issue you only need to see logs when executing that 1 test but you’ll drown in log output from all 100 tests."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "bcffa560-6dfa-43e6-b107-ce5fbd12e0f2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "My solution: control logging state with global variable "
            ],
            [
              "verboseLog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and allow toggling this flag per test."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "My solution: control logging state with global variable "
          },
          {
            "Text": "verboseLog",
            "AttrFlags": 2
          },
          {
            "Text": " and allow toggling this flag per test."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "3e48ff78-2261-4ef0-9c96-3d8eb34bba58",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Something like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Something like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828315,
        "id": "a1b29e17-b1f2-4492-b871-5a5058c1a959",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828315,
        "parent_id": "ca323dad-4452-4d7b-8b6b-642e7e862b41",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "var (\n    verboseLog = false\n)\n\nfunc myCodeWithBugs(s string) {\n    if verboseLog {\n        fmt.Printf(\"s: %s\\n\", s)\n    }\n    ...\n}\n\nfunc TestMyCode(t *testing.T) {\n    var tests = []struct {\n        ... test fields\n        debug bool\n    }{\n        { ..., false }, // without verbose logging\n        { ..., true },  // with verbose logging\n    }\n    for _, test := range tests {\n        verboseLog = test.debug\n        ...\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var (\n    verboseLog = false\n)\n\nfunc myCodeWithBugs(s string) {\n    if verboseLog {\n        fmt.Printf(\"s: %s\\n\", s)\n    }\n    ...\n}\n\nfunc TestMyCode(t *testing.T) {\n    var tests = []struct {\n        ... test fields\n        debug bool\n    }{\n        { ..., false }, // without verbose logging\n        { ..., true },  // with verbose logging\n    }\n    for _, test := range tests {\n        verboseLog = test.debug\n        ...\n    }\n}",
        "code_language": "Go"
      }
    ],
    "title": "Tip for verbose logging in Go",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}