{
  "ID": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
  "Page": {
    "alive": true,
    "content": [
      "831436c6-f214-405d-be4c-a1800554cd6e",
      "53df882c-098f-4bda-8a1f-37a9e95f8bdf",
      "4a09b596-75a6-4bf8-b73a-23e6e06a1a28",
      "0ba1ba0b-6298-45fc-8bc1-a5f8e82c61e5",
      "c89d413c-57d3-402d-be95-3374343687ce",
      "dbe9630e-9056-40d3-9928-b07d768dc429",
      "89bcaf00-5a98-42a1-b4ad-629b1f46c1f8",
      "939ed6f4-e6ef-467b-aed9-962dc3d6e174",
      "b9d8f070-3acd-4089-ac57-65281eb3f9c2",
      "b488e723-1807-4e0f-bca4-9219bea54e73",
      "738ca136-4143-4656-9468-f3e265f0c385",
      "660c27eb-4ce3-41ea-ba31-bcf3da5c4721",
      "f9a77822-2350-4cfa-9b24-c06872ab00af",
      "4c430517-2fd1-41bf-9f03-832aa58b7a6e",
      "388a374c-ba69-4130-a0e4-e1fd7299f19e",
      "9eea9708-e961-4a77-afd5-690ebeeee24a",
      "d94951f5-a167-4a7c-8aaa-6956ce6600d5",
      "d2de63f8-9c2e-45d3-aefe-c4b9388f88c5",
      "7d039744-c5a6-4494-8099-92e4535ffd20",
      "67010b8f-8997-4198-be4f-63d120037c58",
      "fcb71e17-d007-41c0-9f71-b074338e809d",
      "88cc67cb-b932-4425-a480-dccef03eaf1b",
      "cbcb5456-db4a-4687-a2f5-0ad8e1ef94f2",
      "389e0d9f-826b-45d7-bcb6-c0003df03398",
      "4fba0e2b-5097-40c5-83a0-1d435590e527",
      "199d88b0-60bd-47b9-83cc-772dc9f69f7b",
      "8fcbfa2a-13eb-470f-b087-63f0c3f7de12",
      "83955941-f307-4bbd-86d3-a089fbd9b084",
      "0fc70c0b-acc4-4898-bab2-73a57544cb0f",
      "e720e22f-5954-4531-a0ca-79507857cfd8",
      "47993cff-b4f4-4422-8b7f-83b95261c9f8",
      "0d139672-7934-4edd-a947-064490fa45f5",
      "dfe80065-03bc-48e4-a507-2390e28c012d",
      "e3df59c5-2c03-4017-97b3-b73c2d4c5e06",
      "038e993c-6eb1-49ea-8d60-f913b4c79874",
      "8c1d68a8-dcae-48b3-9204-40ce7276e195"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531736828280,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531736828280,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Improving speed of SMAZ compressor by 2.6x/1.5x"
        ]
      ]
    },
    "type": "page",
    "version": 5,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828280,
        "id": "831436c6-f214-405d-be4c-a1800554cd6e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828280,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 13"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Id: 13"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828280,
        "id": "53df882c-098f-4bda-8a1f-37a9e95f8bdf",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828280,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2014-12-11T00:19:49-08:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2014-12-11T00:19:49-08:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828280,
        "id": "4a09b596-75a6-4bf8-b73a-23e6e06a1a28",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828280,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: go, programming"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: go, programming"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828280,
        "id": "0ba1ba0b-6298-45fc-8bc1-a5f8e82c61e5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828280,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "HeaderImage: gfx/headers/header-08.jpg"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "HeaderImage: gfx/headers/header-08.jpg"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828280,
        "id": "c89d413c-57d3-402d-be95-3374343687ce",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828280,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Collection: go-cookbook"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Collection: go-cookbook"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828280,
        "id": "dbe9630e-9056-40d3-9928-b07d768dc429",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828280,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "type": "text",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828281,
        "id": "89bcaf00-5a98-42a1-b4ad-629b1f46c1f8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828281,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I was testing fast compressors in pure Go. One of them was "
            ],
            [
              "Go implementation",
              [
                [
                  "a",
                  "https://github.com/kjk/smaz"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "SMAZ algorithm",
              [
                [
                  "a",
                  "https://github.com/antirez/smaz"
                ]
              ]
            ],
            [
              " for compressing small strings. It’s simple, fast and works well for English text."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I was testing fast compressors in pure Go. One of them was "
          },
          {
            "Text": "Go implementation",
            "Link": "https://github.com/kjk/smaz"
          },
          {
            "Text": " of "
          },
          {
            "Text": "SMAZ algorithm",
            "Link": "https://github.com/antirez/smaz"
          },
          {
            "Text": " for compressing small strings. It’s simple, fast and works well for English text."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828281,
        "id": "939ed6f4-e6ef-467b-aed9-962dc3d6e174",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828281,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It wasn’t as fast as I expected so I looked at the code and with a few tweaks I managed to speed up decompression 2.61x times and compression 1.54x times:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It wasn’t as fast as I expected so I looked at the code and with a few tweaks I managed to speed up decompression 2.61x times and compression 1.54x times:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828281,
        "id": "b9d8f070-3acd-4089-ac57-65281eb3f9c2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828281,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "kjkmacpro:smaz kjk$ benchcmp before.txt after.txt\nbenchmark                  old ns/op     new ns/op     delta\nBenchmarkCompression       3387936       2195304       -35.20%\nBenchmarkDecompression     2667583       1022908       -61.65%\n\nbenchmark                  old MB/s     new MB/s     speedup\nBenchmarkCompression       40.35        62.26        1.54x\nBenchmarkDecompression     28.34        73.90        2.61x"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "kjkmacpro:smaz kjk$ benchcmp before.txt after.txt\nbenchmark                  old ns/op     new ns/op     delta\nBenchmarkCompression       3387936       2195304       -35.20%\nBenchmarkDecompression     2667583       1022908       -61.65%\n\nbenchmark                  old MB/s     new MB/s     speedup\nBenchmarkCompression       40.35        62.26        1.54x\nBenchmarkDecompression     28.34        73.90        2.61x",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828282,
        "id": "b488e723-1807-4e0f-bca4-9219bea54e73",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828282,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The speed increase came from 3 micro-optimizations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The speed increase came from 3 micro-optimizations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828282,
        "id": "738ca136-4143-4656-9468-f3e265f0c385",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828282,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1. Don’t use "
            ],
            [
              "bytes.Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if "
            ],
            [
              "[]byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will do."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "1. Don’t use "
          },
          {
            "Text": "bytes.Buffer",
            "AttrFlags": 2
          },
          {
            "Text": " if "
          },
          {
            "Text": "[]byte",
            "AttrFlags": 2
          },
          {
            "Text": " will do."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828282,
        "id": "660c27eb-4ce3-41ea-ba31-bcf3da5c4721",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828282,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The biggest decompression speed-up came from "
            ],
            [
              "this change",
              [
                [
                  "a",
                  "https://github.com/kjk/smaz/commit/7adaf22db621f66027e38bd1ee4d36f351025043"
                ]
              ]
            ],
            [
              " where I replaced the use of "
            ],
            [
              "bytes.Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "[]byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " slice."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The biggest decompression speed-up came from "
          },
          {
            "Text": "this change",
            "Link": "https://github.com/kjk/smaz/commit/7adaf22db621f66027e38bd1ee4d36f351025043"
          },
          {
            "Text": " where I replaced the use of "
          },
          {
            "Text": "bytes.Buffer",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "[]byte",
            "AttrFlags": 2
          },
          {
            "Text": " slice."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828284,
        "id": "f9a77822-2350-4cfa-9b24-c06872ab00af",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828284,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bytes.Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a wrapper around "
            ],
            [
              "[]byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It adds convenience by implementing popular interfaces like "
            ],
            [
              "io.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " etc. Decreased speed is the price of that."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "bytes.Buffer",
            "AttrFlags": 2
          },
          {
            "Text": " is a wrapper around "
          },
          {
            "Text": "[]byte",
            "AttrFlags": 2
          },
          {
            "Text": ". It adds convenience by implementing popular interfaces like "
          },
          {
            "Text": "io.Reader",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": " etc. Decreased speed is the price of that."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828284,
        "id": "4c430517-2fd1-41bf-9f03-832aa58b7a6e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828284,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It doesn’t matter in most programs, but in a tight decompression loop even small wins do add up."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It doesn’t matter in most programs, but in a tight decompression loop even small wins do add up."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828284,
        "id": "388a374c-ba69-4130-a0e4-e1fd7299f19e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828284,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2. Re-using buffers is another common optimization trick in Go."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "2. Re-using buffers is another common optimization trick in Go."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828284,
        "id": "9eea9708-e961-4a77-afd5-690ebeeee24a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828284,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The original API was:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The original API was:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828284,
        "id": "d94951f5-a167-4a7c-8aaa-6956ce6600d5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531817095602,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "compressed := smaz.Compress(source)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "compressed := smaz.Compress(source)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "d2de63f8-9c2e-45d3-aefe-c4b9388f88c5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compress",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function has no option but to allocate a new buffer for the compressed data. Allocations are not free and they slow down the program by making garbage collector do more work."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compress",
            "AttrFlags": 2
          },
          {
            "Text": " function has no option but to allocate a new buffer for the compressed data. Allocations are not free and they slow down the program by making garbage collector do more work."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "7d039744-c5a6-4494-8099-92e4535ffd20",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Other compression libraries allow the caller to provide a buffer for the result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Other compression libraries allow the caller to provide a buffer for the result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "67010b8f-8997-4198-be4f-63d120037c58",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531817098407,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "compressed := make([]byte, 1024)\ncompressed = smaz.Encode(compressed, source)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "compressed := make([]byte, 1024)\ncompressed = smaz.Encode(compressed, source)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "fcb71e17-d007-41c0-9f71-b074338e809d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the buffer is not big enough, it’ll be enlarged. If the caller doesn’t want manage the buffer, it can pass "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the buffer is not big enough, it’ll be enlarged. If the caller doesn’t want manage the buffer, it can pass "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "88cc67cb-b932-4425-a480-dccef03eaf1b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "3. Avoid un-necessary copies"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "3. Avoid un-necessary copies"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "cbcb5456-db4a-4687-a2f5-0ad8e1ef94f2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compression and decompression involves reading data from memory, transforming it and writing the result to another memory location."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compression and decompression involves reading data from memory, transforming it and writing the result to another memory location."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "389e0d9f-826b-45d7-bcb6-c0003df03398",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Memory access is expensive. You can execute "
            ],
            [
              "7 CPU instructions",
              [
                [
                  "a",
                  "https://gist.github.com/kjk/0cd9e13e8b5f1046b697"
                ]
              ]
            ],
            [
              " for one memory operation in L2 cache."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Memory access is expensive. You can execute "
          },
          {
            "Text": "7 CPU instructions",
            "Link": "https://gist.github.com/kjk/0cd9e13e8b5f1046b697"
          },
          {
            "Text": " for one memory operation in L2 cache."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "4fba0e2b-5097-40c5-83a0-1d435590e527",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I noticed that compression was making unnecessary temporary copies of data. The code got "
            ],
            [
              "a bit more complicated",
              [
                [
                  "a",
                  "https://github.com/kjk/smaz/commit/754db648b7cd39fb12120a851e3d1106d2dff3e0"
                ]
              ]
            ],
            [
              " but also 1.14x faster."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I noticed that compression was making unnecessary temporary copies of data. The code got "
          },
          {
            "Text": "a bit more complicated",
            "Link": "https://github.com/kjk/smaz/commit/754db648b7cd39fb12120a851e3d1106d2dff3e0"
          },
          {
            "Text": " but also 1.14x faster."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "199d88b0-60bd-47b9-83cc-772dc9f69f7b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Benchmarking tools in Go"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Benchmarking tools in Go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828285,
        "id": "8fcbfa2a-13eb-470f-b087-63f0c3f7de12",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828285,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go includes tools for writing benchmarks and tests."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go includes tools for writing benchmarks and tests."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "83955941-f307-4bbd-86d3-a089fbd9b084",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828286,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing benchmarks is straightforward. Here’s a benchmark for compression speed:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing benchmarks is straightforward. Here’s a benchmark for compression speed:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "0fc70c0b-acc4-4898-bab2-73a57544cb0f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531817103768,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func BenchmarkCompression(b *testing.B) {\n    b.StopTimer()\n    inputs, n := loadTestData(b)\n    b.SetBytes(n)\n    b.StartTimer()\n    var dst []byte\n    for i := 0; i \u003c b.N; i++ {\n        for _, input := range inputs {\n            dst = Encode(dst, input)\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func BenchmarkCompression(b *testing.B) {\n    b.StopTimer()\n    inputs, n := loadTestData(b)\n    b.SetBytes(n)\n    b.StartTimer()\n    var dst []byte\n    for i := 0; i \u003c b.N; i++ {\n        for _, input := range inputs {\n            dst = Encode(dst, input)\n        }\n    }\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "e720e22f-5954-4531-a0ca-79507857cfd8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828286,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You run benchmarks with "
            ],
            [
              "go test -bench=.",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". To benchmark a single function only use "
            ],
            [
              "-bench",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument (or pass "
            ],
            [
              ".",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to run all of them)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You run benchmarks with "
          },
          {
            "Text": "go test -bench=.",
            "AttrFlags": 2
          },
          {
            "Text": ". To benchmark a single function only use "
          },
          {
            "Text": "-bench",
            "AttrFlags": 2
          },
          {
            "Text": " argument (or pass "
          },
          {
            "Text": ".",
            "AttrFlags": 2
          },
          {
            "Text": " to run all of them)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "47993cff-b4f4-4422-8b7f-83b95261c9f8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828286,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go minimizes amount of work the programmer needs to do in several ways:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go minimizes amount of work the programmer needs to do in several ways:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "0d139672-7934-4edd-a947-064490fa45f5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828286,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "benchmarking functions are automatically recognized by convention: a function that starts with "
            ],
            [
              "Benchmark",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "*_test.go",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " file is a benchmark function"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "benchmarking functions are automatically recognized by convention: a function that starts with "
          },
          {
            "Text": "Benchmark",
            "AttrFlags": 2
          },
          {
            "Text": " in "
          },
          {
            "Text": "*_test.go",
            "AttrFlags": 2
          },
          {
            "Text": " file is a benchmark function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "dfe80065-03bc-48e4-a507-2390e28c012d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828286,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the results are in a standardized, human-readable form"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the results are in a standardized, human-readable form"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "e3df59c5-2c03-4017-97b3-b73c2d4c5e06",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828286,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "benchmarking tool not only measures time but you can also get MB/s metric by using "
            ],
            [
              "b.SetBytes()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It’s a good metric for compression algorithms."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "benchmarking tool not only measures time but you can also get MB/s metric by using "
          },
          {
            "Text": "b.SetBytes()",
            "AttrFlags": 2
          },
          {
            "Text": ". It’s a good metric for compression algorithms."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828286,
        "id": "038e993c-6eb1-49ea-8d60-f913b4c79874",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531736828286,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There’s also a tool to compare benchmark results (before and after the change):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There’s also a tool to compare benchmark results (before and after the change):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531736828287,
        "id": "8c1d68a8-dcae-48b3-9204-40ce7276e195",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531817107847,
        "parent_id": "acd27c24-15d6-412f-bfc5-ebebb8ced3b9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Shell"
            ]
          ],
          "title": [
            [
              "\u003e go get -u golang.org/x/tools/cmd/benchcmp\n\u003e go test -bench=. \u003ebefore.txt\n\u003e ... make the changes\n\u003e go test -bench=. \u003eafter.txt\n\u003e benchcmp before.txt after.txt"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "\u003e go get -u golang.org/x/tools/cmd/benchcmp\n\u003e go test -bench=. \u003ebefore.txt\n\u003e ... make the changes\n\u003e go test -bench=. \u003eafter.txt\n\u003e benchcmp before.txt after.txt",
        "code_language": "Shell"
      }
    ],
    "title": "Improving speed of SMAZ compressor by 2.6x/1.5x",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}