{
  "ID": "c598349d-9349-4937-94d8-9041f694a5cb",
  "Page": {
    "alive": true,
    "content": [
      "ad1b089b-976a-4cde-af6b-fb907996a9e2",
      "7b730c3b-9ca4-4935-bbf6-a944f054ae12",
      "da51af28-ed76-447d-a6f6-32c992869f6e",
      "77819aa5-267c-4c55-a44a-b67c4ba2e0aa",
      "8d35b8b7-c6ee-4f21-ad8e-ae7d0dc92b55",
      "a418f5d6-4135-455f-9855-11258d4b3c6b",
      "90256697-75b8-45e9-9d5c-49dd9f4e5057",
      "ab7a1619-86d1-4c23-830a-0803ddc5c1b9",
      "c68682b4-b13d-4774-b100-8c4e08e9bbb5",
      "203b2917-297d-4022-a45e-1953b982dc63"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531195845697,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c598349d-9349-4937-94d8-9041f694a5cb",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531624011526,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Deeply nested if statements"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "ad1b089b-976a-4cde-af6b-fb907996a9e2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624011526,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 1964"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 1964"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "7b730c3b-9ca4-4935-bbf6-a944f054ae12",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2006-08-22T13:56:32-07:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2006-08-22T13:56:32-07:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "da51af28-ed76-447d-a6f6-32c992869f6e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624010634,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "77819aa5-267c-4c55-a44a-b67c4ba2e0aa",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I dislike deeply nested C++ code. I.e. the code of the form:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I dislike deeply nested C++ code. I.e. the code of the form:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "8d35b8b7-c6ee-4f21-ad8e-ae7d0dc92b55",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Java/C/C++/C#"
            ]
          ],
          "title": [
            [
              "if (foo) {\n  if (bar) {\n   if (anotherVariable) {\n   }\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (foo) {\n  if (bar) {\n   if (anotherVariable) {\n   }\n  }\n}",
        "code_language": "Java/C/C++/C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "a418f5d6-4135-455f-9855-11258d4b3c6b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s a simplified example that doesn’t really show the problem with such code - when the logic within an if is long, such code becomes hard to read because it becomes difficult to figure out what logic condition is handled by a given part."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s a simplified example that doesn’t really show the problem with such code - when the logic within an if is long, such code becomes hard to read because it becomes difficult to figure out what logic condition is handled by a given part."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "90256697-75b8-45e9-9d5c-49dd9f4e5057",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To my surprise I seem to be in minority. Most people, especially the Windows GUI kind, nest logic conditions like there’s no tomorrow. I find it hard to argue about the superiority of avoiding nesting because saying “this is hard to read” is too vague. But I’m relieved to find out that I’m not the only one that has a dislike for unnecessary nesting. Stepanov, inventor and implementor of STL, has a great example of simplifying nested logic in his “Professionalism in Programming” paper ("
            ],
            [
              "PowerPoint",
              [
                [
                  "a",
                  "http://www.stepanovpapers.com/Professionalism%20in%20Programming.ppt"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "PDF",
              [
                [
                  "a",
                  "http://www.stepanovpapers.com/Professionalism%20in%20Programming.pdf"
                ]
              ]
            ],
            [
              ", from "
            ],
            [
              "his website",
              [
                [
                  "a",
                  "http://www.stepanovpapers.com/"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To my surprise I seem to be in minority. Most people, especially the Windows GUI kind, nest logic conditions like there’s no tomorrow. I find it hard to argue about the superiority of avoiding nesting because saying “this is hard to read” is too vague. But I’m relieved to find out that I’m not the only one that has a dislike for unnecessary nesting. Stepanov, inventor and implementor of STL, has a great example of simplifying nested logic in his “Professionalism in Programming” paper ("
          },
          {
            "Text": "PowerPoint",
            "Link": "http://www.stepanovpapers.com/Professionalism%20in%20Programming.ppt"
          },
          {
            "Text": ", "
          },
          {
            "Text": "PDF",
            "Link": "http://www.stepanovpapers.com/Professionalism%20in%20Programming.pdf"
          },
          {
            "Text": ", from "
          },
          {
            "Text": "his website",
            "Link": "http://www.stepanovpapers.com/"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "ab7a1619-86d1-4c23-830a-0803ddc5c1b9",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The way to avoid deeply nesting is to do early exit as soon as possible. The trivial example could be rewritten as:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The way to avoid deeply nesting is to do early exit as soon as possible. The trivial example could be rewritten as:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "c68682b4-b13d-4774-b100-8c4e08e9bbb5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Java/C/C++/C#"
            ]
          ],
          "title": [
            [
              "if (!foo) return;\n  if (!bar) return;\n  if (!anotherVariable) return;\n\n  ... and this is the logic"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if (!foo) return;\n  if (!bar) return;\n  if (!anotherVariable) return;\n\n  ... and this is the logic",
        "code_language": "Java/C/C++/C#"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845697,
        "id": "203b2917-297d-4022-a45e-1953b982dc63",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845697,
        "parent_id": "c598349d-9349-4937-94d8-9041f694a5cb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Of course trivial examples teach us nothing - this only shows the forest so that you don’t get lost in details. For a real-life example see how Stepanov refactors deeply nested logic expression (pages 4-13 in the paper above)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Of course trivial examples teach us nothing - this only shows the forest so that you don’t get lost in details. For a real-life example see how Stepanov refactors deeply nested logic expression (pages 4-13 in the paper above)."
          }
        ]
      }
    ],
    "title": "Deeply nested if statements",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}