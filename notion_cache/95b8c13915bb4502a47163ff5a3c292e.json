{
  "ID": "95b8c139-15bb-4502-a471-63ff5a3c292e",
  "Page": {
    "alive": true,
    "content": [
      "f3a2e267-b49e-495b-9fb0-1bc8b6555c1f",
      "5a8442a3-4d72-41c7-99af-3443c6ea811e",
      "77b6beda-0128-44f8-b418-e32b6cee5803",
      "84fdefd0-392e-4335-94f9-da506abdba70",
      "ddc640c6-1f51-4e91-8af0-68b8d10a8176",
      "6d7e48f5-4ab0-49c9-a36d-2b38c333e315",
      "206dccb6-9e6a-4df8-b647-d466d2dc725e",
      "85e47a07-7256-4501-aec7-c9ee9d2c258a",
      "dfdfe8e1-2512-45ca-a55f-bdbceb1615e3",
      "190d60c6-a164-4bc7-9598-ebc37c875e30",
      "0d0bf380-8af0-4ee1-bc34-9dc8c6b78420",
      "8667b115-d834-478d-a440-bb75aa8e2af2",
      "0c6ea10c-6de6-4d79-968c-91465c1821c3",
      "099fe64b-d2ba-4e26-8873-456b1d0c946e",
      "4ccaa368-6d99-4440-8fab-7dd2701343ea"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1530157262241,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531381966776,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Principle of good design: discoverability"
        ]
      ]
    },
    "type": "page",
    "version": 57,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262228,
        "id": "f3a2e267-b49e-495b-9fb0-1bc8b6555c1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531381966776,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 1355"
            ]
          ]
        },
        "type": "text",
        "version": 7,
        "inline_content": [
          {
            "Text": "Id: 1355"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531120442295,
        "id": "5a8442a3-4d72-41c7-99af-3443c6ea811e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531120444485,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: ui design"
            ]
          ]
        },
        "type": "text",
        "version": 10,
        "inline_content": [
          {
            "Text": "Tags: ui design"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531120444485,
        "id": "77b6beda-0128-44f8-b418-e32b6cee5803",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531128062558,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2002-07-26T01:31:44-07:00"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "Date: 2002-07-26T01:31:44-07:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531120451086,
        "id": "84fdefd0-392e-4335-94f9-da506abdba70",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531381969128,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "type": "text",
        "version": 12
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531120453063,
        "id": "ddc640c6-1f51-4e91-8af0-68b8d10a8176",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531120453079,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One of the principles of good design is discoverability: it should be easy for users to discover what the program can do just by fooling around."
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "One of the principles of good design is discoverability: it should be easy for users to discover what the program can do just by fooling around."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262237,
        "id": "6d7e48f5-4ab0-49c9-a36d-2b38c333e315",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262237,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Menus and toolbars add discoverability: they don’t interfere if users don’t care about them but they’re always there, visible, for users to try out new features of the program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Menus and toolbars add discoverability: they don’t interfere if users don’t care about them but they’re always there, visible, for users to try out new features of the program."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262238,
        "id": "206dccb6-9e6a-4df8-b647-d466d2dc725e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262238,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Emacs, in general, has poor discoverability. Most of the work is being done with arbitrary keystrokes and obscure lisp functions and the only way to find out what a given keystroke does is by reading copious manuals or using one of the obscure lisp functions to list current key bindings."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Emacs, in general, has poor discoverability. Most of the work is being done with arbitrary keystrokes and obscure lisp functions and the only way to find out what a given keystroke does is by reading copious manuals or using one of the obscure lisp functions to list current key bindings."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262238,
        "id": "85e47a07-7256-4501-aec7-c9ee9d2c258a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262238,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is efficient for experienced users but presents a very high barrier to entry for new users."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is efficient for experienced users but presents a very high barrier to entry for new users."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262238,
        "id": "dfdfe8e1-2512-45ca-a55f-bdbceb1615e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262238,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are two problems:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are two problems:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262239,
        "id": "190d60c6-a164-4bc7-9598-ebc37c875e30",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262239,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it’s hard to find out what a given keystroke does"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "it’s hard to find out what a given keystroke does"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262240,
        "id": "0d0bf380-8af0-4ee1-bc34-9dc8c6b78420",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262240,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it’s hard to find out what is a keystroke that does what I want"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "it’s hard to find out what is a keystroke that does what I want"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262240,
        "id": "8667b115-d834-478d-a440-bb75aa8e2af2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262240,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It would help discoverability if users could easily find those 2 things out. Here enters my idea: we need to add a new window that will list all keystrokes that are reachable from a given point."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It would help discoverability if users could easily find those 2 things out. Here enters my idea: we need to add a new window that will list all keystrokes that are reachable from a given point."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262240,
        "id": "0c6ea10c-6de6-4d79-968c-91465c1821c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262240,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Normally it would be empty. When users presses “Alt” key it would list all keystrokes that start with “Alt” key. Entries should be sorted in the order of usefulness."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Normally it would be empty. When users presses “Alt” key it would list all keystrokes that start with “Alt” key. Entries should be sorted in the order of usefulness."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262241,
        "id": "099fe64b-d2ba-4e26-8873-456b1d0c946e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262241,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That way users could see what a given keystroke does and with time learn other useful keystroke by looking at the list of available options."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That way users could see what a given keystroke does and with time learn other useful keystroke by looking at the list of available options."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1530157262241,
        "id": "4ccaa368-6d99-4440-8fab-7dd2701343ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1530157262241,
        "parent_id": "95b8c139-15bb-4502-a471-63ff5a3c292e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This window could be small, permanent window (with the ability to hide/show it) or something that only pops-up when needed (similar to how the auto-completion usually works). This idea is not limited to Emacs - many programs implement key bindings as a short-cut for frequently used functions and could benefit from a system like this."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This window could be small, permanent window (with the ability to hide/show it) or something that only pops-up when needed (similar to how the auto-completion usually works). This idea is not limited to Emacs - many programs implement key bindings as a short-cut for frequently used functions and could benefit from a system like this."
          }
        ]
      }
    ],
    "title": "Principle of good design: discoverability",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}