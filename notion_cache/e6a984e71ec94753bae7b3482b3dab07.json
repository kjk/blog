{
  "ID": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
  "Page": {
    "alive": true,
    "content": [
      "d3a5db24-7b0a-4026-bc8f-1b4ebc48b201",
      "0df0abc9-a47e-44b6-b26c-d5314665aca4",
      "3968fe36-3a5c-42cb-94f0-4c188a6b7621",
      "144d3083-8899-4467-b7b3-f62a83379cb6",
      "27595c50-331e-4718-9d83-44fe123818f6",
      "f57f6158-8d7a-4c15-a8dc-66fb424ff7cd",
      "25a77f25-647a-4e74-9ff6-eac78edf9ff9",
      "8ae445a2-5dd3-446f-919f-38a349a774ae",
      "d5a56cd9-3667-4363-b85e-c69eccbf30b8",
      "a8b77c53-f3b9-446e-8c7a-11b538836537",
      "40d45f9f-84b8-4625-a494-e4921b9dba7e",
      "d8fbd532-3fd3-49ec-8ac4-e8b547262e87",
      "575f782d-8426-4daf-b8e5-dc7c0e4ed815",
      "b74de177-756c-471e-add1-00c0dae574e5",
      "ce53aae5-c327-4d10-8a5c-8540a8bf0ebb",
      "9aabd643-4cb7-4633-a8f9-fc151f5e7338"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531195824012,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531624234514,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Serialization in C#"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "d3a5db24-7b0a-4026-bc8f-1b4ebc48b201",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624234514,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 311"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 311"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "0df0abc9-a47e-44b6-b26c-d5314665aca4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: c#, .net"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: c#, .net"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "3968fe36-3a5c-42cb-94f0-4c188a6b7621",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2005-12-27T16:00:00-08:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2005-12-27T16:00:00-08:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "144d3083-8899-4467-b7b3-f62a83379cb6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624233449,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "27595c50-331e-4718-9d83-44fe123818f6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Serialization (known as pickling in python) is an easy way to convert an object to a binary representation that can then be e.g. written to disk or sent over a wire."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Serialization (known as pickling in python) is an easy way to convert an object to a binary representation that can then be e.g. written to disk or sent over a wire."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "f57f6158-8d7a-4c15-a8dc-66fb424ff7cd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s useful e.g. for easy saving of settings to a file."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s useful e.g. for easy saving of settings to a file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "25a77f25-647a-4e74-9ff6-eac78edf9ff9",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can serialize your own classes if you mark them with "
            ],
            [
              "[Serializable]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " attribute. This serializes all members of a class, except those marked as "
            ],
            [
              "[NonSerialized]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can serialize your own classes if you mark them with "
          },
          {
            "Text": "[Serializable]",
            "AttrFlags": 2
          },
          {
            "Text": " attribute. This serializes all members of a class, except those marked as "
          },
          {
            "Text": "[NonSerialized]",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "8ae445a2-5dd3-446f-919f-38a349a774ae",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              ".NET offers 2 serializers: binary, SOAP, XML. The difference between binary and SOAP is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": ".NET offers 2 serializers: binary, SOAP, XML. The difference between binary and SOAP is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "d5a56cd9-3667-4363-b85e-c69eccbf30b8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "binary is more efficient (time and memory used)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "binary is more efficient (time and memory used)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "a8b77c53-f3b9-446e-8c7a-11b538836537",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "binary is not human-readable. SOAP isn’t much better."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "binary is not human-readable. SOAP isn’t much better."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824013,
        "id": "40d45f9f-84b8-4625-a494-e4921b9dba7e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824013,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "XML is slightly different:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "XML is slightly different:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824015,
        "id": "d8fbd532-3fd3-49ec-8ac4-e8b547262e87",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824015,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it lives in "
            ],
            [
              "System.Xml.Serialization",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "it lives in "
          },
          {
            "Text": "System.Xml.Serialization",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824015,
        "id": "575f782d-8426-4daf-b8e5-dc7c0e4ed815",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824015,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it uses "
            ],
            [
              "[XmlIgnore]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of "
            ],
            [
              "[NonSerialized]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and ignores "
            ],
            [
              "[Serializable]",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "it uses "
          },
          {
            "Text": "[XmlIgnore]",
            "AttrFlags": 2
          },
          {
            "Text": " instead of "
          },
          {
            "Text": "[NonSerialized]",
            "AttrFlags": 2
          },
          {
            "Text": " and ignores "
          },
          {
            "Text": "[Serializable]",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824015,
        "id": "b74de177-756c-471e-add1-00c0dae574e5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824015,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "it doesn’t serialize private class members"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "it doesn’t serialize private class members"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824015,
        "id": "ce53aae5-c327-4d10-8a5c-8540a8bf0ebb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824015,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example of serialization/deserialization to a file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example of serialization/deserialization to a file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195824015,
        "id": "9aabd643-4cb7-4633-a8f9-fc151f5e7338",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195824015,
        "parent_id": "e6a984e7-1ec9-4753-bae7-b3482b3dab07",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Java/C/C++/C#"
            ]
          ],
          "title": [
            [
              "using System.IO;\nusing System.Diagnostics;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters;\nusing System.Runtime.Serialization.Formatters.Binary;\n\n[Serializable]\npublic class MySettings {\n    public int screenDx;\n    public ArrayList recentlyOpenedFiles;\n    [NonSerialized]public string dummy;\n}\n\npublic class Settings {\n    const int VERSION = 1;\n    static void Save(MySettings settings, string fileName) {\n            Stream stream = null;\n            try {\n                IFormatter formatter = new BinaryFormatter();\n                stream = new FileStream(fileName, FileMode.Create, FileAccess.Write, FileShare.None);\n                formatter.Serialize(stream, VERSION);\n                formatter.Serialize(stream, settings);\n            } catch {\n                // do nothing, just ignore any possible errors\n            } finally {\n                if (null != stream)\n                    stream.Close();\n            }\n    }\n\n    static MySettings Load(string fileName) {\n        Stream stream = null;\n        MySettings settings = null;\n        try {\n            IFormatter formatter = new BinaryFormatter();\n            stream = new FileStream(fileName, FileMode.Open, FileAccess.Read, FileShare.None);\n            int version = (int)formatter.Deserialize(stream);\n            Debug.Assert(version == VERSION);\n            settings = (MySettings)formatter.Deserialize(stream);\n        } catch {\n            // do nothing, just ignore any possible errors\n        } finally {\n            if (null != stream)\n                stream.Close();\n        }\n        return settings;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using System.IO;\nusing System.Diagnostics;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters;\nusing System.Runtime.Serialization.Formatters.Binary;\n\n[Serializable]\npublic class MySettings {\n    public int screenDx;\n    public ArrayList recentlyOpenedFiles;\n    [NonSerialized]public string dummy;\n}\n\npublic class Settings {\n    const int VERSION = 1;\n    static void Save(MySettings settings, string fileName) {\n            Stream stream = null;\n            try {\n                IFormatter formatter = new BinaryFormatter();\n                stream = new FileStream(fileName, FileMode.Create, FileAccess.Write, FileShare.None);\n                formatter.Serialize(stream, VERSION);\n                formatter.Serialize(stream, settings);\n            } catch {\n                // do nothing, just ignore any possible errors\n            } finally {\n                if (null != stream)\n                    stream.Close();\n            }\n    }\n\n    static MySettings Load(string fileName) {\n        Stream stream = null;\n        MySettings settings = null;\n        try {\n            IFormatter formatter = new BinaryFormatter();\n            stream = new FileStream(fileName, FileMode.Open, FileAccess.Read, FileShare.None);\n            int version = (int)formatter.Deserialize(stream);\n            Debug.Assert(version == VERSION);\n            settings = (MySettings)formatter.Deserialize(stream);\n        } catch {\n            // do nothing, just ignore any possible errors\n        } finally {\n            if (null != stream)\n                stream.Close();\n        }\n        return settings;\n    }\n}",
        "code_language": "Java/C/C++/C#"
      }
    ],
    "title": "Serialization in C#",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}