{
  "ID": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
  "Page": {
    "alive": true,
    "content": [
      "9de13d29-0f62-436d-92a3-f4977234b705",
      "8c84aef7-19bf-49ef-8be3-105c15d1d644",
      "1c8d7777-a036-48be-acc4-fbdaed9e3912",
      "1442fe45-d386-4582-8900-d42a7e31a416",
      "423d78e9-5b11-45c4-9b32-d39ce94d3db5",
      "0d835d5e-afb3-4ae8-b0a7-b8fceb051e2c",
      "cd6ef574-1ab0-4032-8dfb-d13361d32d37",
      "aaef94bd-0d4f-4b80-8969-b0e75999373c",
      "df37ce26-54e7-4d1d-9a63-bb49acfd1e23",
      "5bf0ffd4-42dd-4428-b6c0-0f75371fbb07"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531203217698,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531713551039,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Tip for verbose logging in Go"
        ]
      ]
    },
    "type": "page",
    "version": 9,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "9de13d29-0f62-436d-92a3-f4977234b705",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531713551039,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 12"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 12"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "8c84aef7-19bf-49ef-8be3-105c15d1d644",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531713549583,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2014-12-03T18:21:29-08:00"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Date: 2014-12-03T18:21:29-08:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "1c8d7777-a036-48be-acc4-fbdaed9e3912",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217698,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: programming, go"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: programming, go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "1442fe45-d386-4582-8900-d42a7e31a416",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531713548786,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "423d78e9-5b11-45c4-9b32-d39ce94d3db5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217698,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go lacks a good ad-hoc debugging tool (i.e. a competent debugger)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go lacks a good ad-hoc debugging tool (i.e. a competent debugger)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "0d835d5e-afb3-4ae8-b0a7-b8fceb051e2c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217698,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For that reason we have to revert to caveman-style debugging: sprinkling the code with "
            ],
            [
              "fmt.Printf()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For that reason we have to revert to caveman-style debugging: sprinkling the code with "
          },
          {
            "Text": "fmt.Printf()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "cd6ef574-1ab0-4032-8dfb-d13361d32d37",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217698,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The problem with this approach is lack of selectivity: imagine you have 100 tests and only 1 test fails. For debugging the issue you only need to see logs when executing that 1 test but you’ll drown in log output from all 100 tests."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The problem with this approach is lack of selectivity: imagine you have 100 tests and only 1 test fails. For debugging the issue you only need to see logs when executing that 1 test but you’ll drown in log output from all 100 tests."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "aaef94bd-0d4f-4b80-8969-b0e75999373c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217698,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "My solution: control logging state with global variable "
            ],
            [
              "verboseLog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and allow toggling this flag per test."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "My solution: control logging state with global variable "
          },
          {
            "Text": "verboseLog",
            "AttrFlags": 2
          },
          {
            "Text": " and allow toggling this flag per test."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "df37ce26-54e7-4d1d-9a63-bb49acfd1e23",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217698,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Something like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Something like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217698,
        "id": "5bf0ffd4-42dd-4428-b6c0-0f75371fbb07",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217698,
        "parent_id": "dfd3a3c7-1670-40f9-a036-6f87490d8cb0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "var (\n    verboseLog = false\n)\n\nfunc myCodeWithBugs(s string) {\n    if verboseLog {\n        fmt.Printf(\"s: %s\\n\", s)\n    }\n    ...\n}\n\nfunc TestMyCode(t *testing.T) {\n    var tests = []struct {\n        ... test fields\n        debug bool\n    }{\n        { ..., false }, // without verbose logging\n        { ..., true },  // with verbose logging\n    }\n    for _, test := range tests {\n        verboseLog = test.debug\n        ...\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var (\n    verboseLog = false\n)\n\nfunc myCodeWithBugs(s string) {\n    if verboseLog {\n        fmt.Printf(\"s: %s\\n\", s)\n    }\n    ...\n}\n\nfunc TestMyCode(t *testing.T) {\n    var tests = []struct {\n        ... test fields\n        debug bool\n    }{\n        { ..., false }, // without verbose logging\n        { ..., true },  // with verbose logging\n    }\n    for _, test := range tests {\n        verboseLog = test.debug\n        ...\n    }\n}",
        "code_language": "Go"
      }
    ],
    "title": "Tip for verbose logging in Go",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}