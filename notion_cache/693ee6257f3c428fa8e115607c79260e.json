{
  "ID": "693ee625-7f3c-428f-a8e1-15607c79260e",
  "Page": {
    "alive": true,
    "content": [
      "e84af324-3f28-47f0-81ca-7adc84140be6",
      "e4580f3c-dc35-454e-97ec-0bf59cf1dc1c",
      "a041318e-0cca-49e7-8c78-2a100d5350e6",
      "c2c14d42-cef8-4e87-968f-1447517ff9b3",
      "1b5adf18-4298-4538-9a4c-8ddd93a6919e",
      "e72aa12e-e2cd-4324-9bdd-ca7e9538d64d",
      "ba073990-f885-4be6-9d70-43fe0c39ce25",
      "63469f44-ecd1-4302-84df-56fea75dc5aa",
      "08ac030b-7324-4061-8ef7-644edba13e72",
      "f081459d-802f-4432-89d7-f30d60fb2705",
      "9e3740a3-eb97-4177-95e4-456fa16d1999",
      "a83cb376-7619-4217-a2b8-0e7787d34f3c",
      "20f1c6a2-0f63-4e68-bfc0-3620a82f22e6",
      "6ba58c97-fb73-42b2-897d-c10797a5ff50",
      "2bcf2944-970d-4390-bc74-1dc7edbc9bef",
      "e0acbc91-7021-4ad4-a229-8cc929f04093",
      "204b4f07-5190-4f98-9e7e-393ad6bcf52a",
      "34d3e1b5-b88e-43fb-b62e-622102d5522c",
      "7e1e060d-01e2-4deb-8abd-422b1a128126",
      "eef7f1aa-234a-4526-a5ed-26f229c7e37c",
      "5a351112-7b87-4c8a-9836-cc8e96001354",
      "c1281790-dba7-4f15-8f35-335c0a3a0455",
      "da25a1a2-0455-4861-adca-31c9250dd443",
      "a381fc6b-f882-4880-9e6d-d089b103489b",
      "90fb4141-a8de-46a3-8b0d-d447859f6679",
      "c38daa0b-4206-41de-8f56-c9039720efef",
      "6eda708a-3df2-4264-807e-1fe79b54951a",
      "ef0aa016-3b05-4428-a8f1-f442c1a474af",
      "e86e53d3-1f93-4a41-80bd-03e1fcef2e95",
      "f8e2e969-c800-4b19-b989-f35fe194a8dd",
      "9271d23e-1311-44e5-94b1-ece05645af2f",
      "e0e9eece-4d42-4ba8-ad78-4ae7d77bec27",
      "3147e337-9699-47bd-a050-eced6ec38b22",
      "1bf7b130-5800-4945-8f0b-0d34127a0e78",
      "bff205c5-cc88-47b6-b3ee-738f212e879c",
      "bcb3afeb-71a5-4212-82fe-06e6aea6a6e2",
      "19cf2cdc-806f-4102-882d-efa7bf58f05f",
      "a2afd968-cda5-4027-9aa7-7dc250a0eeb0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531204099700,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "693ee625-7f3c-428f-a8e1-15607c79260e",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531814842721,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Tutorial for github.com/kjk/flex Go package (implementation of CSS flexbox algorithm)"
        ]
      ]
    },
    "type": "page",
    "version": 23,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "e84af324-3f28-47f0-81ca-7adc84140be6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531383520760,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 9"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 9"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "e4580f3c-dc35-454e-97ec-0bf59cf1dc1c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2017-08-04T18:32:51-07:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2017-08-04T18:32:51-07:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "a041318e-0cca-49e7-8c78-2a100d5350e6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: go"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "c2c14d42-cef8-4e87-968f-1447517ff9b3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531383518820,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "1b5adf18-4298-4538-9a4c-8ddd93a6919e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Package "
            ],
            [
              "github.com/kjk/flex",
              [
                [
                  "a",
                  "https://github.com/kjk/flex"
                ]
              ]
            ],
            [
              " implements "
            ],
            [
              "CSS flexbox",
              [
                [
                  "a",
                  "https://www.w3.org/TR/css-flexbox-1/"
                ]
              ]
            ],
            [
              " layout algorithm in Go."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Package "
          },
          {
            "Text": "github.com/kjk/flex",
            "Link": "https://github.com/kjk/flex"
          },
          {
            "Text": " implements "
          },
          {
            "Text": "CSS flexbox",
            "Link": "https://www.w3.org/TR/css-flexbox-1/"
          },
          {
            "Text": " layout algorithm in Go."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "e72aa12e-e2cd-4324-9bdd-ca7e9538d64d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s a pure Go "
            ],
            [
              "port",
              [
                [
                  "a",
                  "/article/wN9R/experience-porting-4.5k-loc-of-c-to-go-facebooks-css-flexbox-implementation-yoga.html"
                ]
              ]
            ],
            [
              " of Facebook’s "
            ],
            [
              "Yoga",
              [
                [
                  "a",
                  "https://github.com/facebook/yoga"
                ]
              ]
            ],
            [
              " C library."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s a pure Go "
          },
          {
            "Text": "port",
            "Link": "/article/wN9R/experience-porting-4.5k-loc-of-c-to-go-facebooks-css-flexbox-implementation-yoga.html"
          },
          {
            "Text": " of Facebook’s "
          },
          {
            "Text": "Yoga",
            "Link": "https://github.com/facebook/yoga"
          },
          {
            "Text": " C library."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "ba073990-f885-4be6-9d70-43fe0c39ce25",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "High-level API overview"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "High-level API overview"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "63469f44-ecd1-4302-84df-56fea75dc5aa",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Despite implementing CSS flexbox spec, it isn’t tied to CSS/HTML in any way. Yoga, for example, can be integrated with iOS app and used to layout UIView hierarchy."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Despite implementing CSS flexbox spec, it isn’t tied to CSS/HTML in any way. Yoga, for example, can be integrated with iOS app and used to layout UIView hierarchy."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "08ac030b-7324-4061-8ef7-644edba13e72",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The library works on abstract tree of nodes. In HTML a node would correspond to a block element like a "
            ],
            [
              "div",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". When used in Cocoa app, a node could represent "
            ],
            [
              "UIView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "NSView",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The library works on abstract tree of nodes. In HTML a node would correspond to a block element like a "
          },
          {
            "Text": "div",
            "AttrFlags": 2
          },
          {
            "Text": ". When used in Cocoa app, a node could represent "
          },
          {
            "Text": "UIView",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "NSView",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099700,
        "id": "f081459d-802f-4432-89d7-f30d60fb2705",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099700,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When used on windows, it could represent a HWND-based control."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When used on windows, it could represent a HWND-based control."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "9e3740a3-eb97-4177-95e4-456fa16d1999",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531814811504,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The high-level use is: "
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "The high-level use is: "
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531814811504,
        "id": "a83cb376-7619-4217-a2b8-0e7787d34f3c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531814830903,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "create a tree of nodes that represents a layout you want to represent"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 21,
        "inline_content": [
          {
            "Text": "create a tree of nodes that represents a layout you want to represent"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531814818049,
        "id": "20f1c6a2-0f63-4e68-bfc0-3620a82f22e6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531814829160,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "set desired flexbox properties on each node using "
            ],
            [
              "node.StyleSet*()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "functions",
              [
                [
                  "a",
                  "https://github.com/kjk/flex/blob/master/yoga_props.go#L58"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 14,
        "inline_content": [
          {
            "Text": "set desired flexbox properties on each node using "
          },
          {
            "Text": "node.StyleSet*()",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "functions",
            "Link": "https://github.com/kjk/flex/blob/master/yoga_props.go#L58"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531814826373,
        "id": "6ba58c97-fb73-42b2-897d-c10797a5ff50",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531814836554,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "call "
            ],
            [
              "flex.CalculateLayout(rootNode, parentWidth, parentHeight, direction)",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 12,
        "inline_content": [
          {
            "Text": "call "
          },
          {
            "Text": "flex.CalculateLayout(rootNode, parentWidth, parentHeight, direction)",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531814836554,
        "id": "2bcf2944-970d-4390-bc74-1dc7edbc9bef",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531814842721,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "each node is now measured and positioned so you can e.g. size and position widgets associated with each node. You can get the size on position of nodes with "
            ],
            [
              "node.LayoutGet*()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "functions",
              [
                [
                  "a",
                  "https://github.com/kjk/flex/blob/master/yoga_props.go#L531"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 14,
        "inline_content": [
          {
            "Text": "each node is now measured and positioned so you can e.g. size and position widgets associated with each node. You can get the size on position of nodes with "
          },
          {
            "Text": "node.LayoutGet*()",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "functions",
            "Link": "https://github.com/kjk/flex/blob/master/yoga_props.go#L531"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531814842721,
        "id": "e0acbc91-7021-4ad4-a229-8cc929f04093",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531814853281,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "when layout hierachy changes (e.g. the node represents a label and you’ve changed its text, which changes it’s intrinsic size), call "
            ],
            [
              "node.MarkDirty()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "CalculateLayout()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to re-calculate new size/position of the nodes"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 14,
        "inline_content": [
          {
            "Text": "when layout hierachy changes (e.g. the node represents a label and you’ve changed its text, which changes it’s intrinsic size), call "
          },
          {
            "Text": "node.MarkDirty()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "CalculateLayout()",
            "AttrFlags": 2
          },
          {
            "Text": " to re-calculate new size/position of the nodes"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "204b4f07-5190-4f98-9e7e-393ad6bcf52a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An exmple"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "An exmple"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "34d3e1b5-b88e-43fb-b62e-622102d5522c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s assume that we want to re-create the following HTML layout:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s assume that we want to re-create the following HTML layout:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "7e1e060d-01e2-4deb-8abd-422b1a128126",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "XML"
            ]
          ],
          "title": [
            [
              "\u003cdiv id=\"percentage_multiple_nested_with_padding_margin_and_percentage_values\" style=\"width: 200px; height: 200px; flex-direction: column;\"\u003e\n  \u003cdiv style=\"flex-grow: 1; flex-basis: 10%; min-width: 60%; margin: 5px; padding: 3px;\"\u003e\n    \u003cdiv style=\"width: 50%; margin: 5px; padding: 3%;\"\u003e\n      \u003cdiv style=\"width: 45%; margin: 5%; padding: 3px;\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003cdiv style=\"flex-grow: 4; flex-basis: 15%; min-width: 20%;\"\u003e\u003c/div\u003e\n\u003c/div\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cdiv id=\"percentage_multiple_nested_with_padding_margin_and_percentage_values\" style=\"width: 200px; height: 200px; flex-direction: column;\"\u003e\n  \u003cdiv style=\"flex-grow: 1; flex-basis: 10%; min-width: 60%; margin: 5px; padding: 3px;\"\u003e\n    \u003cdiv style=\"width: 50%; margin: 5px; padding: 3%;\"\u003e\n      \u003cdiv style=\"width: 45%; margin: 5%; padding: 3px;\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003cdiv style=\"flex-grow: 4; flex-basis: 15%; min-width: 20%;\"\u003e\u003c/div\u003e\n\u003c/div\u003e",
        "code_language": "XML"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "eef7f1aa-234a-4526-a5ed-26f229c7e37c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The equivalent Go code is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The equivalent Go code is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "5a351112-7b87-4c8a-9836-cc8e96001354",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "config := flex.NewConfig()\n\nroot := flex.NewNodeWithConfig(config)\nroot.StyleSetWidth(200)\nroot.StyleSetHeight(200)\n\nrootChild0 := flex.NewNodeWithConfig(config)\nrootChild0.StyleSetFlexGrow(1)\nrootChild0.StyleSetFlexBasisPercent(10)\nrootChild0.StyleSetMargin(EdgeLeft, 5)\nrootChild0.StyleSetMargin(EdgeTop, 5)\nrootChild0.StyleSetMargin(EdgeRight, 5)\nrootChild0.StyleSetMargin(EdgeBottom, 5)\nrootChild0.StyleSetPadding(EdgeLeft, 3)\nrootChild0.StyleSetPadding(EdgeTop, 3)\nrootChild0.StyleSetPadding(EdgeRight, 3)\nrootChild0.StyleSetPadding(EdgeBottom, 3)\nrootChild0.StyleSetMinWidthPercent(60)\nroot.InsertChild(rootChild0, 0)\n\nrootChild0Child0 := flex.NewNodeWithConfig(config)\nrootChild0Child0.StyleSetMargin(EdgeLeft, 5)\nrootChild0Child0.StyleSetMargin(EdgeTop, 5)\nrootChild0Child0.StyleSetMargin(EdgeRight, 5)\nrootChild0Child0.StyleSetMargin(EdgeBottom, 5)\nrootChild0Child0.StyleSetPaddingPercent(EdgeLeft, 3)\nrootChild0Child0.StyleSetPaddingPercent(EdgeTop, 3)\nrootChild0Child0.StyleSetPaddingPercent(EdgeRight, 3)\nrootChild0Child0.StyleSetPaddingPercent(EdgeBottom, 3)\nrootChild0Child0.StyleSetWidthPercent(50)\nrootChild0.InsertChild(rootChild0Child0, 0)\n\nrootChild0Child0Child0 := flex.NewNodeWithConfig(config)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeLeft, 5)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeTop, 5)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeRight, 5)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeBottom, 5)\nrootChild0Child0Child0.StyleSetPadding(EdgeLeft, 3)\nrootChild0Child0Child0.StyleSetPadding(EdgeTop, 3)\nrootChild0Child0Child0.StyleSetPadding(EdgeRight, 3)\nrootChild0Child0Child0.StyleSetPadding(EdgeBottom, 3)\nrootChild0Child0Child0.StyleSetWidthPercent(45)\nrootChild0Child0.InsertChild(rootChild0Child0Child0, 0)\n\nrootChild1 := flex.NewNodeWithConfig(config)\nrootChild1.StyleSetFlexGrow(4)\nrootChild1.StyleSetFlexBasisPercent(15)\nrootChild1.StyleSetMinWidthPercent(20)\nroot.InsertChild(rootChild1, 1)\nflex.CalculateLayout(root, flex.Undefined, flex.Undefined, DirectionLTR)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "config := flex.NewConfig()\n\nroot := flex.NewNodeWithConfig(config)\nroot.StyleSetWidth(200)\nroot.StyleSetHeight(200)\n\nrootChild0 := flex.NewNodeWithConfig(config)\nrootChild0.StyleSetFlexGrow(1)\nrootChild0.StyleSetFlexBasisPercent(10)\nrootChild0.StyleSetMargin(EdgeLeft, 5)\nrootChild0.StyleSetMargin(EdgeTop, 5)\nrootChild0.StyleSetMargin(EdgeRight, 5)\nrootChild0.StyleSetMargin(EdgeBottom, 5)\nrootChild0.StyleSetPadding(EdgeLeft, 3)\nrootChild0.StyleSetPadding(EdgeTop, 3)\nrootChild0.StyleSetPadding(EdgeRight, 3)\nrootChild0.StyleSetPadding(EdgeBottom, 3)\nrootChild0.StyleSetMinWidthPercent(60)\nroot.InsertChild(rootChild0, 0)\n\nrootChild0Child0 := flex.NewNodeWithConfig(config)\nrootChild0Child0.StyleSetMargin(EdgeLeft, 5)\nrootChild0Child0.StyleSetMargin(EdgeTop, 5)\nrootChild0Child0.StyleSetMargin(EdgeRight, 5)\nrootChild0Child0.StyleSetMargin(EdgeBottom, 5)\nrootChild0Child0.StyleSetPaddingPercent(EdgeLeft, 3)\nrootChild0Child0.StyleSetPaddingPercent(EdgeTop, 3)\nrootChild0Child0.StyleSetPaddingPercent(EdgeRight, 3)\nrootChild0Child0.StyleSetPaddingPercent(EdgeBottom, 3)\nrootChild0Child0.StyleSetWidthPercent(50)\nrootChild0.InsertChild(rootChild0Child0, 0)\n\nrootChild0Child0Child0 := flex.NewNodeWithConfig(config)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeLeft, 5)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeTop, 5)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeRight, 5)\nrootChild0Child0Child0.StyleSetMarginPercent(EdgeBottom, 5)\nrootChild0Child0Child0.StyleSetPadding(EdgeLeft, 3)\nrootChild0Child0Child0.StyleSetPadding(EdgeTop, 3)\nrootChild0Child0Child0.StyleSetPadding(EdgeRight, 3)\nrootChild0Child0Child0.StyleSetPadding(EdgeBottom, 3)\nrootChild0Child0Child0.StyleSetWidthPercent(45)\nrootChild0Child0.InsertChild(rootChild0Child0Child0, 0)\n\nrootChild1 := flex.NewNodeWithConfig(config)\nrootChild1.StyleSetFlexGrow(4)\nrootChild1.StyleSetFlexBasisPercent(15)\nrootChild1.StyleSetMinWidthPercent(20)\nroot.InsertChild(rootChild1, 1)\nflex.CalculateLayout(root, flex.Undefined, flex.Undefined, DirectionLTR)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "c1281790-dba7-4f15-8f35-335c0a3a0455",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After "
            ],
            [
              "CalculateLayout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " we can see the position of each node e.g.:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After "
          },
          {
            "Text": "CalculateLayout",
            "AttrFlags": 2
          },
          {
            "Text": " we can see the position of each node e.g.:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "da25a1a2-0455-4861-adca-31c9250dd443",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "fmt.Printf(\"root left: %f\\n\", root.LayoutGetLeft()) // 0\nfmt.Printf\"root top: %f\\n\", root.LayoutGetTop()) // 0\nfmt.Printf(\"root width: %f\\n\", root.LayoutGetWidth()) // 200\nfmt.Printf(\"root height: %f\\n\", root.LayoutGetHeight()) // 200"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "fmt.Printf(\"root left: %f\\n\", root.LayoutGetLeft()) // 0\nfmt.Printf\"root top: %f\\n\", root.LayoutGetTop()) // 0\nfmt.Printf(\"root width: %f\\n\", root.LayoutGetWidth()) // 200\nfmt.Printf(\"root height: %f\\n\", root.LayoutGetHeight()) // 200",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "a381fc6b-f882-4880-9e6d-d089b103489b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To see example for every flexbox property, look into "
            ],
            [
              "github.com/facebook/yoga/gentest/fixtures",
              [
                [
                  "a",
                  "https://github.com/facebook/yoga/tree/master/gentest/fixtures"
                ]
              ]
            ],
            [
              ". Their names hint at which properties are being used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To see example for every flexbox property, look into "
          },
          {
            "Text": "github.com/facebook/yoga/gentest/fixtures",
            "Link": "https://github.com/facebook/yoga/tree/master/gentest/fixtures"
          },
          {
            "Text": ". Their names hint at which properties are being used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "90fb4141-a8de-46a3-8b0d-d447859f6679",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each file there has corresponding "
            ],
            [
              "*_test.go",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " file in "
            ],
            [
              "github.com/kjk/flex",
              [
                [
                  "a",
                  "https://github.com/kjk/flex"
                ]
              ]
            ],
            [
              " directory which shows how to express it in Go."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each file there has corresponding "
          },
          {
            "Text": "*_test.go",
            "AttrFlags": 2
          },
          {
            "Text": " file in "
          },
          {
            "Text": "github.com/kjk/flex",
            "Link": "https://github.com/kjk/flex"
          },
          {
            "Text": " directory which shows how to express it in Go."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "c38daa0b-4206-41de-8f56-c9039720efef",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Size of root’s parent"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Size of root’s parent"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "6eda708a-3df2-4264-807e-1fe79b54951a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice that in this particular example we used "
            ],
            [
              "flex.Undefined",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as both height and width of the parent container."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice that in this particular example we used "
          },
          {
            "Text": "flex.Undefined",
            "AttrFlags": 2
          },
          {
            "Text": " as both height and width of the parent container."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "ef0aa016-3b05-4428-a8f1-f442c1a474af",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine you’re using "
            ],
            [
              "flex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to implment layout for a dekstop application where each "
            ],
            [
              "flex.Node",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " represents a control inside the window."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Imagine you’re using "
          },
          {
            "Text": "flex",
            "AttrFlags": 2
          },
          {
            "Text": " to implment layout for a dekstop application where each "
          },
          {
            "Text": "flex.Node",
            "AttrFlags": 2
          },
          {
            "Text": " represents a control inside the window."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "e86e53d3-1f93-4a41-80bd-03e1fcef2e95",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Window is the parent of root node."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Window is the parent of root node."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "f8e2e969-c800-4b19-b989-f35fe194a8dd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In response to user resizing the window, you want to pass width/height of the window to "
            ],
            [
              "flex.CalculateLayout()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In response to user resizing the window, you want to pass width/height of the window to "
          },
          {
            "Text": "flex.CalculateLayout()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "9271d23e-1311-44e5-94b1-ece05645af2f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you create the window initially, you might do the reverse: pass "
            ],
            [
              "flex.Undefined",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as width/height of parent container and then use the size of root node as the size of the window, to size it to its content."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you create the window initially, you might do the reverse: pass "
          },
          {
            "Text": "flex.Undefined",
            "AttrFlags": 2
          },
          {
            "Text": " as width/height of parent container and then use the size of root node as the size of the window, to size it to its content."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "e0e9eece-4d42-4ba8-ad78-4ae7d77bec27",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Measure function"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Measure function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "3147e337-9699-47bd-a050-eced6ec38b22",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine that a node represents an OS button. The button has some intrisic size dictated by its text."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Imagine that a node represents an OS button. The button has some intrisic size dictated by its text."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "1bf7b130-5800-4945-8f0b-0d34127a0e78",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To represent that size "
            ],
            [
              "flex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " allows setting a measuring function with "
            ],
            [
              "node.SetMeasureFunc(measureFunc MeasureFunc)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It’s definition is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To represent that size "
          },
          {
            "Text": "flex",
            "AttrFlags": 2
          },
          {
            "Text": " allows setting a measuring function with "
          },
          {
            "Text": "node.SetMeasureFunc(measureFunc MeasureFunc)",
            "AttrFlags": 2
          },
          {
            "Text": ". It’s definition is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "bff205c5-cc88-47b6-b3ee-738f212e879c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "type MeasureFunc func(node *Node, width float32, widthMode MeasureMode, height float32, heightMode MeasureMode) Size"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "type MeasureFunc func(node *Node, width float32, widthMode MeasureMode, height float32, heightMode MeasureMode) Size",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "bcb3afeb-71a5-4212-82fe-06e6aea6a6e2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The functions takes a hint width/height which is the size of parent container and returns intrinsic size of node."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The functions takes a hint width/height which is the size of parent container and returns intrinsic size of node."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "19cf2cdc-806f-4102-882d-efa7bf58f05f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is usefule e.g. when a node represents a paragraph of text. When you know width of the parent container, you can break it into multi-line text."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is usefule e.g. when a node represents a paragraph of text. When you know width of the parent container, you can break it into multi-line text."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531204099701,
        "id": "a2afd968-cda5-4027-9aa7-7dc250a0eeb0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531204099701,
        "parent_id": "693ee625-7f3c-428f-a8e1-15607c79260e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If measuring function needs some state, you can use "
            ],
            [
              "node.Context",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to store it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If measuring function needs some state, you can use "
          },
          {
            "Text": "node.Context",
            "AttrFlags": 2
          },
          {
            "Text": " to store it."
          }
        ]
      }
    ],
    "title": "Tutorial for github.com/kjk/flex Go package (implementation of CSS flexbox algorithm)",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}