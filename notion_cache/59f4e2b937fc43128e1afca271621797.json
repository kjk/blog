{
  "ID": "59f4e2b9-37fc-4312-8e1a-fca271621797",
  "Page": {
    "alive": true,
    "content": [
      "b05082b2-8930-4b94-ae1d-705aa15fb5ad",
      "033a93ed-0c6a-448a-85ff-63a46cfcd668",
      "fbea363f-c735-4a48-8ce8-cfd3efbabdb6",
      "fdd5fc64-d00d-476b-98dc-74dffc66651e",
      "bb768a47-70c5-4aa7-8898-24f4d48b1320",
      "1fe632b6-0123-440a-b778-70c471b0a2a8",
      "c5661c81-27ba-48b5-b50a-805f83c78b51",
      "1115e7e5-8f25-4ace-a993-1c8319688350",
      "fca2aa92-b34a-4eea-9fd0-d6fb30057875",
      "c48aa286-4150-4139-a983-90459ff28cd8",
      "cfa0ac2d-240b-499e-a5ae-cc0d1d80cccf",
      "b146d702-ec03-4801-8e19-f1e2574dcbee",
      "6e91c0b7-aba1-478a-9c80-0100bee56f22",
      "dd5cd9d7-ed0f-498b-a003-c6846cc3686e",
      "9aa9ada3-e44f-4696-b073-2cd62b6816c8",
      "757edc9a-9109-4c27-911a-b956c12a92ff",
      "dd07b0f8-10f5-4538-8022-d9959d17d4ab",
      "c385fb7a-d1d2-49a8-aaf0-2d92f9eb845a",
      "af081d15-8601-46f8-85aa-6631e6fe6f21",
      "963ac055-be51-4450-b4be-45941137777f",
      "56c3fd55-29f1-4e1b-9c92-9db8929f9b0c",
      "0bfe39ba-f281-455a-9aaf-ed837771dda4",
      "028a4516-0a74-4763-bc4e-668a020d2561",
      "70932b79-c19e-410a-b202-4616ec8a6500",
      "98eb4dda-b1b9-481b-8c08-0b79a370600e",
      "c1f7ffcd-849c-42d9-bc47-db4759d192ff",
      "a9164025-4e90-4056-b545-7c6201fa575f",
      "d25e71ac-d582-4b5a-9c53-7e65dddd26d3",
      "6f6eaa0c-e110-48df-b262-d44e918df015",
      "58b0fdb5-484f-4397-9333-f021431f0cfb",
      "250f4137-1630-4eed-a0b5-1adf98761143",
      "b3f01c54-8bf9-47f3-b7ff-b9a9117cd646",
      "98c9c16d-2813-468a-91f3-5db2a45d6f84",
      "66c84e5c-4133-4cf0-89e0-cc2046f58782",
      "39e5c814-4670-4605-96ba-16ccb3657bad",
      "48c5cef6-d31f-4518-aee8-4419240cf878"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531203217729,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531713566853,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Improving speed of SMAZ compressor by 2.6x/1.5x"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "b05082b2-8930-4b94-ae1d-705aa15fb5ad",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531713567664,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 13"
            ]
          ]
        },
        "type": "text",
        "version": 5,
        "inline_content": [
          {
            "Text": "Id: 13"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "033a93ed-0c6a-448a-85ff-63a46cfcd668",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2014-12-11T00:19:49-08:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2014-12-11T00:19:49-08:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "fbea363f-c735-4a48-8ce8-cfd3efbabdb6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: go, programming"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: go, programming"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "fdd5fc64-d00d-476b-98dc-74dffc66651e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "HeaderImage: gfx/headers/header-08.jpg"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "HeaderImage: gfx/headers/header-08.jpg"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "bb768a47-70c5-4aa7-8898-24f4d48b1320",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Collection: go-cookbook"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Collection: go-cookbook"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "1fe632b6-0123-440a-b778-70c471b0a2a8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531713565008,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "c5661c81-27ba-48b5-b50a-805f83c78b51",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I was testing fast compressors in pure Go. One of them was "
            ],
            [
              "Go implementation",
              [
                [
                  "a",
                  "https://github.com/kjk/smaz"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "SMAZ algorithm",
              [
                [
                  "a",
                  "https://github.com/antirez/smaz"
                ]
              ]
            ],
            [
              " for compressing small strings. It’s simple, fast and works well for English text."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I was testing fast compressors in pure Go. One of them was "
          },
          {
            "Text": "Go implementation",
            "Link": "https://github.com/kjk/smaz"
          },
          {
            "Text": " of "
          },
          {
            "Text": "SMAZ algorithm",
            "Link": "https://github.com/antirez/smaz"
          },
          {
            "Text": " for compressing small strings. It’s simple, fast and works well for English text."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "1115e7e5-8f25-4ace-a993-1c8319688350",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It wasn’t as fast as I expected so I looked at the code and with a few tweaks I managed to speed up decompression 2.61x times and compression 1.54x times:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It wasn’t as fast as I expected so I looked at the code and with a few tweaks I managed to speed up decompression 2.61x times and compression 1.54x times:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "fca2aa92-b34a-4eea-9fd0-d6fb30057875",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "kjkmacpro:smaz kjk$ benchcmp before.txt after.txt\nbenchmark                  old ns/op     new ns/op     delta\nBenchmarkCompression       3387936       2195304       -35.20%\nBenchmarkDecompression     2667583       1022908       -61.65%\n\nbenchmark                  old MB/s     new MB/s     speedup\nBenchmarkCompression       40.35        62.26        1.54x\nBenchmarkDecompression     28.34        73.90        2.61x"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "kjkmacpro:smaz kjk$ benchcmp before.txt after.txt\nbenchmark                  old ns/op     new ns/op     delta\nBenchmarkCompression       3387936       2195304       -35.20%\nBenchmarkDecompression     2667583       1022908       -61.65%\n\nbenchmark                  old MB/s     new MB/s     speedup\nBenchmarkCompression       40.35        62.26        1.54x\nBenchmarkDecompression     28.34        73.90        2.61x",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "c48aa286-4150-4139-a983-90459ff28cd8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The speed increase came from 3 micro-optimizations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The speed increase came from 3 micro-optimizations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "cfa0ac2d-240b-499e-a5ae-cc0d1d80cccf",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1. Don’t use "
            ],
            [
              "bytes.Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if "
            ],
            [
              "[]byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will do."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "1. Don’t use "
          },
          {
            "Text": "bytes.Buffer",
            "AttrFlags": 2
          },
          {
            "Text": " if "
          },
          {
            "Text": "[]byte",
            "AttrFlags": 2
          },
          {
            "Text": " will do."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "b146d702-ec03-4801-8e19-f1e2574dcbee",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The biggest decompression speed-up came from "
            ],
            [
              "this change",
              [
                [
                  "a",
                  "https://github.com/kjk/smaz/commit/7adaf22db621f66027e38bd1ee4d36f351025043"
                ]
              ]
            ],
            [
              " where I replaced the use of "
            ],
            [
              "bytes.Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "[]byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " slice."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The biggest decompression speed-up came from "
          },
          {
            "Text": "this change",
            "Link": "https://github.com/kjk/smaz/commit/7adaf22db621f66027e38bd1ee4d36f351025043"
          },
          {
            "Text": " where I replaced the use of "
          },
          {
            "Text": "bytes.Buffer",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "[]byte",
            "AttrFlags": 2
          },
          {
            "Text": " slice."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "6e91c0b7-aba1-478a-9c80-0100bee56f22",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bytes.Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a wrapper around "
            ],
            [
              "[]byte",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It adds convenience by implementing popular interfaces like "
            ],
            [
              "io.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " etc. Decreased speed is the price of that."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "bytes.Buffer",
            "AttrFlags": 2
          },
          {
            "Text": " is a wrapper around "
          },
          {
            "Text": "[]byte",
            "AttrFlags": 2
          },
          {
            "Text": ". It adds convenience by implementing popular interfaces like "
          },
          {
            "Text": "io.Reader",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": " etc. Decreased speed is the price of that."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "dd5cd9d7-ed0f-498b-a003-c6846cc3686e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It doesn’t matter in most programs, but in a tight decompression loop even small wins do add up."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It doesn’t matter in most programs, but in a tight decompression loop even small wins do add up."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "9aa9ada3-e44f-4696-b073-2cd62b6816c8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2. Re-using buffers is another common optimization trick in Go."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "2. Re-using buffers is another common optimization trick in Go."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "757edc9a-9109-4c27-911a-b956c12a92ff",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The original API was:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The original API was:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "dd07b0f8-10f5-4538-8022-d9959d17d4ab",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "compressed := smaz.Compress(source)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "compressed := smaz.Compress(source)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "c385fb7a-d1d2-49a8-aaf0-2d92f9eb845a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compress",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function has no option but to allocate a new buffer for the compressed data. Allocations are not free and they slow down the program by making garbage collector do more work."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compress",
            "AttrFlags": 2
          },
          {
            "Text": " function has no option but to allocate a new buffer for the compressed data. Allocations are not free and they slow down the program by making garbage collector do more work."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "af081d15-8601-46f8-85aa-6631e6fe6f21",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Other compression libraries allow the caller to provide a buffer for the result:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Other compression libraries allow the caller to provide a buffer for the result:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "963ac055-be51-4450-b4be-45941137777f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "compressed := make([]byte, 1024)\ncompressed = smaz.Encode(compressed, source)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "compressed := make([]byte, 1024)\ncompressed = smaz.Encode(compressed, source)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "56c3fd55-29f1-4e1b-9c92-9db8929f9b0c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the buffer is not big enough, it’ll be enlarged. If the caller doesn’t want manage the buffer, it can pass "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the buffer is not big enough, it’ll be enlarged. If the caller doesn’t want manage the buffer, it can pass "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "0bfe39ba-f281-455a-9aaf-ed837771dda4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "3. Avoid un-necessary copies"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "3. Avoid un-necessary copies"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "028a4516-0a74-4763-bc4e-668a020d2561",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compression and decompression involves reading data from memory, transforming it and writing the result to another memory location."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compression and decompression involves reading data from memory, transforming it and writing the result to another memory location."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "70932b79-c19e-410a-b202-4616ec8a6500",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Memory access is expensive. You can execute "
            ],
            [
              "7 CPU instructions",
              [
                [
                  "a",
                  "https://gist.github.com/kjk/0cd9e13e8b5f1046b697"
                ]
              ]
            ],
            [
              " for one memory operation in L2 cache."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Memory access is expensive. You can execute "
          },
          {
            "Text": "7 CPU instructions",
            "Link": "https://gist.github.com/kjk/0cd9e13e8b5f1046b697"
          },
          {
            "Text": " for one memory operation in L2 cache."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "98eb4dda-b1b9-481b-8c08-0b79a370600e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I noticed that compression was making unnecessary temporary copies of data. The code got "
            ],
            [
              "a bit more complicated",
              [
                [
                  "a",
                  "https://github.com/kjk/smaz/commit/754db648b7cd39fb12120a851e3d1106d2dff3e0"
                ]
              ]
            ],
            [
              " but also 1.14x faster."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I noticed that compression was making unnecessary temporary copies of data. The code got "
          },
          {
            "Text": "a bit more complicated",
            "Link": "https://github.com/kjk/smaz/commit/754db648b7cd39fb12120a851e3d1106d2dff3e0"
          },
          {
            "Text": " but also 1.14x faster."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "c1f7ffcd-849c-42d9-bc47-db4759d192ff",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Benchmarking tools in Go"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Benchmarking tools in Go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "a9164025-4e90-4056-b545-7c6201fa575f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go includes tools for writing benchmarks and tests."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go includes tools for writing benchmarks and tests."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "d25e71ac-d582-4b5a-9c53-7e65dddd26d3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing benchmarks is straightforward. Here’s a benchmark for compression speed:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing benchmarks is straightforward. Here’s a benchmark for compression speed:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "6f6eaa0c-e110-48df-b262-d44e918df015",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "func BenchmarkCompression(b *testing.B) {\n    b.StopTimer()\n    inputs, n := loadTestData(b)\n    b.SetBytes(n)\n    b.StartTimer()\n    var dst []byte\n    for i := 0; i \u003c b.N; i++ {\n        for _, input := range inputs {\n            dst = Encode(dst, input)\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "func BenchmarkCompression(b *testing.B) {\n    b.StopTimer()\n    inputs, n := loadTestData(b)\n    b.SetBytes(n)\n    b.StartTimer()\n    var dst []byte\n    for i := 0; i \u003c b.N; i++ {\n        for _, input := range inputs {\n            dst = Encode(dst, input)\n        }\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "58b0fdb5-484f-4397-9333-f021431f0cfb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You run benchmarks with "
            ],
            [
              "go test -bench=.",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". To benchmark a single function only use "
            ],
            [
              "-bench",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument (or pass "
            ],
            [
              ".",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to run all of them)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You run benchmarks with "
          },
          {
            "Text": "go test -bench=.",
            "AttrFlags": 2
          },
          {
            "Text": ". To benchmark a single function only use "
          },
          {
            "Text": "-bench",
            "AttrFlags": 2
          },
          {
            "Text": " argument (or pass "
          },
          {
            "Text": ".",
            "AttrFlags": 2
          },
          {
            "Text": " to run all of them)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "250f4137-1630-4eed-a0b5-1adf98761143",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go minimizes amount of work the programmer needs to do in several ways:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go minimizes amount of work the programmer needs to do in several ways:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "b3f01c54-8bf9-47f3-b7ff-b9a9117cd646",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "benchmarking functions are automatically recognized by convention: a function that starts with "
            ],
            [
              "Benchmark",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in "
            ],
            [
              "*_test.go",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " file is a benchmark function"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "benchmarking functions are automatically recognized by convention: a function that starts with "
          },
          {
            "Text": "Benchmark",
            "AttrFlags": 2
          },
          {
            "Text": " in "
          },
          {
            "Text": "*_test.go",
            "AttrFlags": 2
          },
          {
            "Text": " file is a benchmark function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "98c9c16d-2813-468a-91f3-5db2a45d6f84",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the results are in a standardized, human-readable form"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the results are in a standardized, human-readable form"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "66c84e5c-4133-4cf0-89e0-cc2046f58782",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "benchmarking tool not only measures time but you can also get MB/s metric by using "
            ],
            [
              "b.SetBytes()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It’s a good metric for compression algorithms."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "benchmarking tool not only measures time but you can also get MB/s metric by using "
          },
          {
            "Text": "b.SetBytes()",
            "AttrFlags": 2
          },
          {
            "Text": ". It’s a good metric for compression algorithms."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "39e5c814-4670-4605-96ba-16ccb3657bad",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There’s also a tool to compare benchmark results (before and after the change):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There’s also a tool to compare benchmark results (before and after the change):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531203217730,
        "id": "48c5cef6-d31f-4518-aee8-4419240cf878",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531203217730,
        "parent_id": "59f4e2b9-37fc-4312-8e1a-fca271621797",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003e go get -u golang.org/x/tools/cmd/benchcmp\n\u003e go test -bench=. \u003ebefore.txt\n\u003e ... make the changes\n\u003e go test -bench=. \u003eafter.txt\n\u003e benchcmp before.txt after.txt"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003e go get -u golang.org/x/tools/cmd/benchcmp\n\u003e go test -bench=. \u003ebefore.txt\n\u003e ... make the changes\n\u003e go test -bench=. \u003eafter.txt\n\u003e benchcmp before.txt after.txt",
        "code_language": "Plain Text"
      }
    ],
    "title": "Improving speed of SMAZ compressor by 2.6x/1.5x",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}