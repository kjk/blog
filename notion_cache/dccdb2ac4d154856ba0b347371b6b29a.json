{
  "ID": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
  "Page": {
    "alive": true,
    "content": [
      "66da6f42-f088-440d-bf52-fd1ef6f87973",
      "bd4f31ce-f2ae-42a7-a344-d8357c151fca",
      "5231a63a-e46a-490a-b04b-ada680e6bfe2",
      "c34c8d80-e691-4d8b-891c-ac93dc792512",
      "e0bf9f3f-5bb3-4fc4-a7e0-598d318437fd",
      "823f99eb-d708-443a-8f3b-4af5fce68255",
      "64540732-0074-425c-bc57-15ab623b7926",
      "1abac9dc-92f9-474c-9c60-38d687130634",
      "e3adbb17-0fe1-40d0-8be4-e0bf021699dc",
      "09917ad2-8cb8-4a93-9d91-055152e3c7cd",
      "99ce0252-924a-44a7-a7e3-b53db19dd629",
      "9097df96-1cf4-4bd4-9524-40dd6d48ff99",
      "71641760-05b9-4de2-ab69-ff912e6fa969",
      "8142ac68-e804-4950-acb5-19d810b49e11",
      "48b6efd9-85c8-4261-b673-806d9c321428",
      "fce45f55-3733-43d1-982c-12fccc5c5b4f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531195926121,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531623687649,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "realloc() on Windows vs. Linux"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "66da6f42-f088-440d-bf52-fd1ef6f87973",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531623687649,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 3002"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 3002"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "bd4f31ce-f2ae-42a7-a344-d8357c151fca",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: programming, optimization"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: programming, optimization"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "5231a63a-e46a-490a-b04b-ada680e6bfe2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2008-07-27T06:31:00-07:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2008-07-27T06:31:00-07:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "c34c8d80-e691-4d8b-891c-ac93dc792512",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531623686355,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "e0bf9f3f-5bb3-4fc4-a7e0-598d318437fd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Short version: realloc() on Windows can have much worse performance than on Linux/Mac."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Short version: realloc() on Windows can have much worse performance than on Linux/Mac."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "823f99eb-d708-443a-8f3b-4af5fce68255",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As part of working on "
            ],
            [
              "Sumatra",
              [
                [
                  "a",
                  "https://www.sumatrapdfreader.org/"
                ]
              ]
            ],
            [
              ", I sometimes work on "
            ],
            [
              "mupdf",
              [
                [
                  "a",
                  "http://ccxvii.net/fitz/"
                ]
              ]
            ],
            [
              ", underlying PDF parsing/rendering engine. I’m not an expert on that code but I try to fix bugs and try to improve performance."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As part of working on "
          },
          {
            "Text": "Sumatra",
            "Link": "https://www.sumatrapdfreader.org/"
          },
          {
            "Text": ", I sometimes work on "
          },
          {
            "Text": "mupdf",
            "Link": "http://ccxvii.net/fitz/"
          },
          {
            "Text": ", underlying PDF parsing/rendering engine. I’m not an expert on that code but I try to fix bugs and try to improve performance."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "64540732-0074-425c-bc57-15ab623b7926",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In testing I noticed that on some PDFs it’s pathetically slow, so I profiled the code and that told me that 99% of the time was spent in realloc(). Also, the same PDF was rendered almost instantaneously on Linux."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In testing I noticed that on some PDFs it’s pathetically slow, so I profiled the code and that told me that 99% of the time was spent in realloc(). Also, the same PDF was rendered almost instantaneously on Linux."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "1abac9dc-92f9-474c-9c60-38d687130634",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code was reading a stream of unknown (a priori) length and the way it worked was by reading 4k chunks of data into a buffer that was grown with realloc() call."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The code was reading a stream of unknown (a priori) length and the way it worked was by reading 4k chunks of data into a buffer that was grown with realloc() call."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "e3adbb17-0fe1-40d0-8be4-e0bf021699dc",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re lucky, realloc() will return the original block of memory and just fiddle with internal allocator structures to make it bigger."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re lucky, realloc() will return the original block of memory and just fiddle with internal allocator structures to make it bigger."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "09917ad2-8cb8-4a93-9d91-055152e3c7cd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re unlucky, realloc() will have to allocate a new block of memory and copy the date from old memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re unlucky, realloc() will have to allocate a new block of memory and copy the date from old memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "99ce0252-924a-44a7-a7e3-b53db19dd629",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re reading 1MB file and growing file data buffer by 4k, you’ll have to call realloc() 256 times and each time the buffer will be bigger. If you’re unlucky and realloc() has to copy the data every time, that’s a lot of cpu time spent data copying."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re reading 1MB file and growing file data buffer by 4k, you’ll have to call realloc() 256 times and each time the buffer will be bigger. If you’re unlucky and realloc() has to copy the data every time, that’s a lot of cpu time spent data copying."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "9097df96-1cf4-4bd4-9524-40dd6d48ff99",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "From observed behavior I have to conclude that realloc() implementation on Linux and Mac is more likely to be able to reuse original memory than implementation in Windows’ CRT (which most likely just calls "
            ],
            [
              "HeapRealloc()",
              [
                [
                  "a",
                  "http://msdn.microsoft.com/en-us/library/aa366704.aspx"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "From observed behavior I have to conclude that realloc() implementation on Linux and Mac is more likely to be able to reuse original memory than implementation in Windows’ CRT (which most likely just calls "
          },
          {
            "Text": "HeapRealloc()",
            "Link": "http://msdn.microsoft.com/en-us/library/aa366704.aspx"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "71641760-05b9-4de2-ab69-ff912e6fa969",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once I knew what the problem was, the fix was simple."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once I knew what the problem was, the fix was simple."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "8142ac68-e804-4950-acb5-19d810b49e11",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "My first implementation",
              [
                [
                  "a",
                  "http://code.google.com/p/sumatrapdf/source/detail?r=132\u0026path=/fitz/stream/stm_misc.c"
                ]
              ]
            ],
            [
              " would read into separate 4k buffers and at the end allocate the result buffer and copy the data just once."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "My first implementation",
            "Link": "http://code.google.com/p/sumatrapdf/source/detail?r=132\u0026path=/fitz/stream/stm_misc.c"
          },
          {
            "Text": " would read into separate 4k buffers and at the end allocate the result buffer and copy the data just once."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "48b6efd9-85c8-4261-b673-806d9c321428",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "My second implementation",
              [
                [
                  "a",
                  "http://github.com/kjk/mupdf/commit/5d812a306fd0a192cfb5d28be58019c86e74b52b"
                ]
              ]
            ],
            [
              " was even simpler: it would grow the buffer size by doubling it, instead of just increasing by 4k. It was slower than first implementation (more copying) but simpler and fast enough."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "My second implementation",
            "Link": "http://github.com/kjk/mupdf/commit/5d812a306fd0a192cfb5d28be58019c86e74b52b"
          },
          {
            "Text": " was even simpler: it would grow the buffer size by doubling it, instead of just increasing by 4k. It was slower than first implementation (more copying) but simpler and fast enough."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195926121,
        "id": "fce45f55-3733-43d1-982c-12fccc5c5b4f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195926121,
        "parent_id": "dccdb2ac-4d15-4856-ba0b-347371b6b29a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A side note: a simple and incorrect conclusion would be that memory allocator implementation on Linux is much better than on Windows. Things aren’t that simple, though. It’s easy to write an allocator that has excellent performance for realloc() but is terrible for everything else. Engineering is an art of compromises and optimizing realloc() apparently wasn’t high on Microsoft’s list of things to shoot for when they were designing allocator in Windows, which is, btw, comparable in performance to allocator in Linux or Mac."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A side note: a simple and incorrect conclusion would be that memory allocator implementation on Linux is much better than on Windows. Things aren’t that simple, though. It’s easy to write an allocator that has excellent performance for realloc() but is terrible for everything else. Engineering is an art of compromises and optimizing realloc() apparently wasn’t high on Microsoft’s list of things to shoot for when they were designing allocator in Windows, which is, btw, comparable in performance to allocator in Linux or Mac."
          }
        ]
      }
    ],
    "title": "realloc() on Windows vs. Linux",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}