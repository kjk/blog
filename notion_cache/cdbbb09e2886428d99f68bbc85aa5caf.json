{
  "ID": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
  "Page": {
    "alive": true,
    "content": [
      "22d7a8de-460d-44f4-9c24-9bf4779dfd89",
      "1f8e73cb-1e2c-4714-9b8c-6086f093b34c",
      "76937fa5-fbe8-489e-8d4d-2b99c6dc1033",
      "cfb1ab2f-e11b-408c-8dd9-9fde6511acc0",
      "8aabe5df-55f4-4173-b38a-f7933d86640c",
      "1d4f5feb-cdf3-422a-aea5-1eadc8ddccb5",
      "e7c51414-79a6-4f9a-bc41-fa50e1479f98",
      "ea0d3999-86d9-42bb-af31-d4915b6e362d",
      "6a9a4cca-c1c0-439d-af42-5b6fc3b1b45d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531195823647,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531624474012,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "How to delete a file you get from urllib.urlretrieve()"
        ]
      ]
    },
    "type": "page",
    "version": 13,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823647,
        "id": "22d7a8de-460d-44f4-9c24-9bf4779dfd89",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624474012,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 898"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 898"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823647,
        "id": "1f8e73cb-1e2c-4714-9b8c-6086f093b34c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195823647,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: python"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: python"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823648,
        "id": "76937fa5-fbe8-489e-8d4d-2b99c6dc1033",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195823648,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2005-05-04T23:40:58-07:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2005-05-04T23:40:58-07:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531624469764,
        "id": "cfb1ab2f-e11b-408c-8dd9-9fde6511acc0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624472046,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Status: hidden"
            ]
          ]
        },
        "type": "text",
        "version": 34,
        "inline_content": [
          {
            "Text": "Status: hidden"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823648,
        "id": "8aabe5df-55f4-4173-b38a-f7933d86640c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531624472531,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823648,
        "id": "1d4f5feb-cdf3-422a-aea5-1eadc8ddccb5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195823648,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I just hit an interesting corner case in Python. Urllib module has a very useful function urllib.urlretrieve(url, filePath) which will get a given url and save it to a file. This function, however, might fail, in which case we would like to delete it so that we don’t get confused by partially downloaded, corrupted file."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I just hit an interesting corner case in Python. Urllib module has a very useful function urllib.urlretrieve(url, filePath) which will get a given url and save it to a file. This function, however, might fail, in which case we would like to delete it so that we don’t get confused by partially downloaded, corrupted file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823648,
        "id": "e7c51414-79a6-4f9a-bc41-fa50e1479f98",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195823648,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To detect failure of urlretrieve() we can simply wrap it inside exception handling. As experience showed, at least on windows, calling os.remove() on the file immediately after the exception happened will fail with ‘Access denied’. According to docs, this error is returned if file is still being used. That is plausible (although not something I would expect)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To detect failure of urlretrieve() we can simply wrap it inside exception handling. As experience showed, at least on windows, calling os.remove() on the file immediately after the exception happened will fail with ‘Access denied’. According to docs, this error is returned if file is still being used. That is plausible (although not something I would expect)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823648,
        "id": "ea0d3999-86d9-42bb-af31-d4915b6e362d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195823648,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "My solution to the problem was to retry os.remove() few times, sleeping for a second between tries, therefore giving python time to close the file used in urlretrieve(). This seems to work. And here’s the full code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "My solution to the problem was to retry os.remove() few times, sleeping for a second between tries, therefore giving python time to close the file used in urlretrieve(). This seems to work. And here’s the full code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195823648,
        "id": "6a9a4cca-c1c0-439d-af42-5b6fc3b1b45d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195823648,
        "parent_id": "cdbbb09e-2886-428d-99f6-8bbc85aa5caf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Python"
            ]
          ],
          "title": [
            [
              "def fFileExists(filePath):\n  try:\n    st = os.stat(filePath)\n  except OSError:\n    # TODO: should check that Errno is 2\n    return False\n  return True\n\nfailedDownload = False\ntry:\n  urllib.urlretrieve(url, filePath)\n  break\nexcept:\n  print \"exception: n  %s, n  %s, n  %s n  when downloading %s\" %\n(sys.exc_info()[0], sys.exc_info()[1], sys.exc_info()[2], url)\n  failedDownload = True\n  # remove potentially only partially downloaded file\n\nif failedDownload and fFileExists(filePath):\n  removeRetryCount = 0\nwhile removeRetryCount \u003c 3:\n  time.sleep(1) # try to sleep to make the time for the file not be used anymore\n  try:\n    os.remove(filePath)\n    break\n  except:\n    print \"exception: n  %s, n  %s, n  %s n  when trying to remove\nfile %s\" % (sys.exc_info()[0], sys.exc_info()[1], sys.exc_info()[2], filePath)\n    removeRetryCount += 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "def fFileExists(filePath):\n  try:\n    st = os.stat(filePath)\n  except OSError:\n    # TODO: should check that Errno is 2\n    return False\n  return True\n\nfailedDownload = False\ntry:\n  urllib.urlretrieve(url, filePath)\n  break\nexcept:\n  print \"exception: n  %s, n  %s, n  %s n  when downloading %s\" %\n(sys.exc_info()[0], sys.exc_info()[1], sys.exc_info()[2], url)\n  failedDownload = True\n  # remove potentially only partially downloaded file\n\nif failedDownload and fFileExists(filePath):\n  removeRetryCount = 0\nwhile removeRetryCount \u003c 3:\n  time.sleep(1) # try to sleep to make the time for the file not be used anymore\n  try:\n    os.remove(filePath)\n    break\n  except:\n    print \"exception: n  %s, n  %s, n  %s n  when trying to remove\nfile %s\" % (sys.exc_info()[0], sys.exc_info()[1], sys.exc_info()[2], filePath)\n    removeRetryCount += 1",
        "code_language": "Python"
      }
    ],
    "title": "How to delete a file you get from urllib.urlretrieve()",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}