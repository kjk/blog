{
  "ID": "87034445-4be2-4df3-bcea-14f1394ae191",
  "Page": {
    "alive": true,
    "content": [
      "1534e801-f60d-40bb-993e-91c6dd1b9954",
      "29b25d30-be28-456d-b80e-2165b199c03d",
      "61e5b4f9-bc6c-4949-92e2-135b72b4ade3",
      "11e12036-2779-42ef-82cf-7e2f6ae51089",
      "e2f1afad-e47d-444c-b985-974d8710b10b",
      "4eec4bbc-3ce4-44fe-b651-3afa6e88e6a7",
      "8e0d095b-2b33-4aa7-927f-54d148f891b1",
      "811c9b6e-30e5-4bcd-a5ac-687e0d8435ba",
      "4f9bf66e-5910-4554-ac8e-ee43a79bf393",
      "c27dd059-7358-47fa-a3a9-27489c9708fd",
      "1569f977-e751-40f4-a8da-e6a060c149af",
      "add2c99b-6bc5-42c4-869b-fba755d03af8",
      "86c51a43-5bac-4e39-88bd-171a125464ca",
      "4190b238-c489-4ba2-b660-7bec1eb87157",
      "9100c0d1-8d61-47f6-aefd-55ab6fd9190f",
      "2cb465e1-e904-45da-bd52-fef55bf87da9",
      "6742b78c-05c3-4a96-b87b-9f40ed14fe1c",
      "2bfb4c67-977e-4653-852f-71a426e598eb",
      "0d44f0a9-a621-41e6-8d71-d8a252350ad4",
      "10ba986a-529c-4de6-bc24-28877d5ffbdd",
      "fecba320-3b52-4780-bd18-b6d38cb557f2",
      "f6370d22-47d5-485b-8d35-8eec4e24b84b",
      "809d9978-595f-4589-8b13-5f4311d15eed",
      "c3cd29fc-1061-4621-bb30-f0633f859d5e",
      "d79374a4-3909-4f46-8b33-14e0dafccc25",
      "c75a2d29-ea87-4e33-b99d-e16fd308f805",
      "d244bfee-6a96-4696-80a8-dfb36fa654a3",
      "98af360c-8485-4ac2-a6f4-e5ab8dc6df4a",
      "f5ef788f-8c4f-416e-a3aa-f941a8c4f144",
      "d7397fc1-3046-4434-928a-f90df9607251"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531195845805,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "87034445-4be2-4df3-bcea-14f1394ae191",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1531623913742,
    "parent_id": "300db9dc-27c8-4958-a08b-8d0c37f4cfe5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "On how I improved Sumatra performance by ~60%"
        ]
      ]
    },
    "type": "page",
    "version": 11,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "1534e801-f60d-40bb-993e-91c6dd1b9954",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531623913742,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: 1966"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Id: 1966"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "29b25d30-be28-456d-b80e-2165b199c03d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: sumatra, optimization, programming, profiling"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Tags: sumatra, optimization, programming, profiling"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "61e5b4f9-bc6c-4949-92e2-135b72b4ade3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Date: 2006-09-02T18:01:53-07:00"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Date: 2006-09-02T18:01:53-07:00"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "11e12036-2779-42ef-82cf-7e2f6ae51089",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531623912433,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "e2f1afad-e47d-444c-b985-974d8710b10b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Improving performance of code you didn’t write is fun. It’s especially fun if you can find a way to make a "
            ],
            [
              "small change",
              [
                [
                  "a",
                  "https://bugs.freedesktop.org/show_bug.cgi?id=8112"
                ]
              ]
            ],
            [
              " and improve performance by ~7%. It doesn’t happen often, but when it does happen, it feels good."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Improving performance of code you didn’t write is fun. It’s especially fun if you can find a way to make a "
          },
          {
            "Text": "small change",
            "Link": "https://bugs.freedesktop.org/show_bug.cgi?id=8112"
          },
          {
            "Text": " and improve performance by ~7%. It doesn’t happen often, but when it does happen, it feels good."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "4eec4bbc-3ce4-44fe-b651-3afa6e88e6a7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sumatra",
              [
                [
                  "a",
                  "https://www.sumatrapdfreader.org/free-pdf-reader.html"
                ]
              ]
            ],
            [
              ", my PDF viewer for Windows, uses an existing open-source "
            ],
            [
              "poppler",
              [
                [
                  "a",
                  "http://poppler.freedesktop.org/"
                ]
              ]
            ],
            [
              " library for most of its work (parsing and rendering PDF files). Almost all execution time is spent in poppler code. I didn’t write the code yet I was able to improve some specific scenario (loading of a PDF file) by about ~60% using rather small and un-intrusive changes (i.e. without rewriting a lot of code)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sumatra",
            "Link": "https://www.sumatrapdfreader.org/free-pdf-reader.html"
          },
          {
            "Text": ", my PDF viewer for Windows, uses an existing open-source "
          },
          {
            "Text": "poppler",
            "Link": "http://poppler.freedesktop.org/"
          },
          {
            "Text": " library for most of its work (parsing and rendering PDF files). Almost all execution time is spent in poppler code. I didn’t write the code yet I was able to improve some specific scenario (loading of a PDF file) by about ~60% using rather small and un-intrusive changes (i.e. without rewriting a lot of code)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "8e0d095b-2b33-4aa7-927f-54d148f891b1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This post describes mechanics of performance improvement process I used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This post describes mechanics of performance improvement process I used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "811c9b6e-30e5-4bcd-a5ac-687e0d8435ba",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before you start improving performance, you need to decide what exactly do you need to improve. You don’t want to waste time "
            ],
            [
              "improving idle loop",
              [
                [
                  "a",
                  "http://www-128.ibm.com/developerworks/power/library/pa-unrollav3/"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before you start improving performance, you need to decide what exactly do you need to improve. You don’t want to waste time "
          },
          {
            "Text": "improving idle loop",
            "Link": "http://www-128.ibm.com/developerworks/power/library/pa-unrollav3/"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "4f9bf66e-5910-4554-ac8e-ee43a79bf393",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Sumatra case that was obvious. The things that people care about are: how long does it take to load the PDF file and how long does it take to render a given page."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Sumatra case that was obvious. The things that people care about are: how long does it take to load the PDF file and how long does it take to render a given page."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "c27dd059-7358-47fa-a3a9-27489c9708fd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another thing you need before even starting to improve the performance is to have a way to reliably measure changes in performance. In my case I had to write a test program that would take name of PDF file as input and dump statistics about how much time, in milliseconds, did it take to load the file and to render each page."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another thing you need before even starting to improve the performance is to have a way to reliably measure changes in performance. In my case I had to write a test program that would take name of PDF file as input and dump statistics about how much time, in milliseconds, did it take to load the file and to render each page."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845805,
        "id": "1569f977-e751-40f4-a8da-e6a060c149af",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845805,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In order to see how my changes affect performance I would build a reference version of test program without any changes, build a version with my changes (making sure I use the same compiler settings for both versions), run them on the same PDF file and compare results."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In order to see how my changes affect performance I would build a reference version of test program without any changes, build a version with my changes (making sure I use the same compiler settings for both versions), run them on the same PDF file and compare results."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "add2c99b-6bc5-42c4-869b-fba755d03af8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Getting results from a single run is not good enough. Given multi-tasking nature of Windows, running time is only an approximation of performance. Also, some parts of the code heavily depend on cache. For example, loading PDF for the second time takes only a fraction of time because the file is most likely cached in memory and memory access is orders of magnitude faster than reading from disk."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Getting results from a single run is not good enough. Given multi-tasking nature of Windows, running time is only an approximation of performance. Also, some parts of the code heavily depend on cache. For example, loading PDF for the second time takes only a fraction of time because the file is most likely cached in memory and memory access is orders of magnitude faster than reading from disk."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "86c51a43-5bac-4e39-88bd-171a125464ca",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Therefore it’s important to run the same test serveral (say 10) times and calculate averages, rejecting values that fall too much outside of average. Rather arbitrarily I decided to do a two-pass filtering when calculating averages. In first pass I reject all values that differ more than 45% from average and in second pass I reject all values that differ more than 10% from the average. I don’t have justification for those values, they seem to work for me. The reason for two-pass filtering is that one really outrages value in a short run might skew average so much that all values differ from average a lot (e.g. \u003e20%)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Therefore it’s important to run the same test serveral (say 10) times and calculate averages, rejecting values that fall too much outside of average. Rather arbitrarily I decided to do a two-pass filtering when calculating averages. In first pass I reject all values that differ more than 45% from average and in second pass I reject all values that differ more than 10% from the average. I don’t have justification for those values, they seem to work for me. The reason for two-pass filtering is that one really outrages value in a short run might skew average so much that all values differ from average a lot (e.g. \u003e20%)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "4190b238-c489-4ba2-b660-7bec1eb87157",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Even with multiple runs I see 1-1.5% changes when running the same executable so I don’t get excited when I see 1.5% improvement with my changes - those fall into line noise."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Even with multiple runs I see 1-1.5% changes when running the same executable so I don’t get excited when I see 1.5% improvement with my changes - those fall into line noise."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "9100c0d1-8d61-47f6-aefd-55ab6fd9190f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another trap are CPUs with dynamically adjustable frequency (standard on laptops since they save power). They completely ruin ability to use execution time for comparison. Don’t use laptops for running tests or turn off this CPU feature."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another trap are CPUs with dynamically adjustable frequency (standard on laptops since they save power). They completely ruin ability to use execution time for comparison. Don’t use laptops for running tests or turn off this CPU feature."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "2cb465e1-e904-45da-bd52-fef55bf87da9",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I used to run tests manually, copy data to spreadsheet and making analysis there. That got old fast, so I wrote a python script to automate the process. The script takes as arguments names of 2 executables to compare, name of PDF file, runs both tests programs on this PDF multiple times (interleaved, to help even out possible CPU load changes from other activity on the computer) and just gives me the summary of results."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I used to run tests manually, copy data to spreadsheet and making analysis there. That got old fast, so I wrote a python script to automate the process. The script takes as arguments names of 2 executables to compare, name of PDF file, runs both tests programs on this PDF multiple times (interleaved, to help even out possible CPU load changes from other activity on the computer) and just gives me the summary of results."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "6742b78c-05c3-4a96-b87b-9f40ed14fe1c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Measuring execution times tells you how much work is being done but what you need to know is which parts of the code are doing the most work. Again, there’s no point optimizing code that is not executed very often. Speeding by 50% a piece of code that contributes to 1% of execution time of your scenario only improves execution time by 0.5%. The best way to get detailed performance information is to use a good profiler. On Windows "
            ],
            [
              "AQTime",
              [
                [
                  "a",
                  "http://www.automatedqa.com/products/aqtime/"
                ]
              ]
            ],
            [
              " is quite wonderful, Visual Studio Team (aka. Expensive) Edition has one. On Unix I’ve read good things about "
            ],
            [
              "valgrind",
              [
                [
                  "a",
                  "http://valgrind.org/"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "oprofile",
              [
                [
                  "a",
                  "http://oprofile.sourceforge.net/"
                ]
              ]
            ],
            [
              "and "
            ],
            [
              "dtrace",
              [
                [
                  "a",
                  "http://www.sun.com/bigadmin/content/dtrace/"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Measuring execution times tells you how much work is being done but what you need to know is which parts of the code are doing the most work. Again, there’s no point optimizing code that is not executed very often. Speeding by 50% a piece of code that contributes to 1% of execution time of your scenario only improves execution time by 0.5%. The best way to get detailed performance information is to use a good profiler. On Windows "
          },
          {
            "Text": "AQTime",
            "Link": "http://www.automatedqa.com/products/aqtime/"
          },
          {
            "Text": " is quite wonderful, Visual Studio Team (aka. Expensive) Edition has one. On Unix I’ve read good things about "
          },
          {
            "Text": "valgrind",
            "Link": "http://valgrind.org/"
          },
          {
            "Text": ", "
          },
          {
            "Text": "oprofile",
            "Link": "http://oprofile.sourceforge.net/"
          },
          {
            "Text": "and "
          },
          {
            "Text": "dtrace",
            "Link": "http://www.sun.com/bigadmin/content/dtrace/"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "2bfb4c67-977e-4653-852f-71a426e598eb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The profiler will show you which functions take most of the time, how many times they are called, call trees etc. This information is not only useful to identify which code needs work but also can help you understand how the code works. If code is algorithms + data then software is code + execution paths."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The profiler will show you which functions take most of the time, how many times they are called, call trees etc. This information is not only useful to identify which code needs work but also can help you understand how the code works. If code is algorithms + data then software is code + execution paths."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "0d44f0a9-a621-41e6-8d71-d8a252350ad4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then there is the hard (but most fun) part of figuring out how to change the code to get speedups."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then there is the hard (but most fun) part of figuring out how to change the code to get speedups."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "10ba986a-529c-4de6-bc24-28877d5ffbdd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is occasional heartbreak. Some of my attempts at improvements only gave me spectacular crashes (as always a result of "
            ],
            [
              "ignorance or carelesness",
              [
                [
                  "a",
                  "/articles/sourceOfBugs.html"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is occasional heartbreak. Some of my attempts at improvements only gave me spectacular crashes (as always a result of "
          },
          {
            "Text": "ignorance or carelesness",
            "Link": "/articles/sourceOfBugs.html"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "fecba320-3b52-4780-bd18-b6d38cb557f2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On the bright side, it also happened that I had improvements ideas that would require extensive changes but after staring more at the code and profiler results, I found much smaller change with a similar speedup potential."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On the bright side, it also happened that I had improvements ideas that would require extensive changes but after staring more at the code and profiler results, I found much smaller change with a similar speedup potential."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "f6370d22-47d5-485b-8d35-8eec4e24b84b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Summary of important points about performance optimization:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Summary of important points about performance optimization:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "809d9978-595f-4589-8b13-5f4311d15eed",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "optimize scenarios that matters to your users"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "optimize scenarios that matters to your users"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "c3cd29fc-1061-4621-bb30-f0633f859d5e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "write tools to make evaluating performance changes possible"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "write tools to make evaluating performance changes possible"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "d79374a4-3909-4f46-8b33-14e0dafccc25",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "write tools to automate performance evaluation"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "write tools to automate performance evaluation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "c75a2d29-ea87-4e33-b99d-e16fd308f805",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "use profiler to see which code needs to be optimized"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "use profiler to see which code needs to be optimized"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "d244bfee-6a96-4696-80a8-dfb36fa654a3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "use profiler to understand how code works"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "use profiler to understand how code works"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "98af360c-8485-4ac2-a6f4-e5ab8dc6df4a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "use your brain to make changes to the code"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "use your brain to make changes to the code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "f5ef788f-8c4f-416e-a3aa-f941a8c4f144",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "make sure your changes do improve performance. Flying blind is not good enough"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "make sure your changes do improve performance. Flying blind is not good enough"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531195845806,
        "id": "d7397fc1-3046-4434-928a-f90df9607251",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531195845806,
        "parent_id": "87034445-4be2-4df3-bcea-14f1394ae191",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you’re curious about what the specific changes for poppler were, you can look at the patches I’ve submitted and their description: "
            ],
            [
              "~19% speedup",
              [
                [
                  "a",
                  "https://bugs.freedesktop.org/show_bug.cgi?id=7808"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "~25% speedup",
              [
                [
                  "a",
                  "https://bugs.freedesktop.org/show_bug.cgi?id=7910"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "~2% speedup",
              [
                [
                  "a",
                  "https://bugs.freedesktop.org/show_bug.cgi?id=8111"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "~7% speedup",
              [
                [
                  "a",
                  "https://bugs.freedesktop.org/show_bug.cgi?id=8112"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you’re curious about what the specific changes for poppler were, you can look at the patches I’ve submitted and their description: "
          },
          {
            "Text": "~19% speedup",
            "Link": "https://bugs.freedesktop.org/show_bug.cgi?id=7808"
          },
          {
            "Text": ", "
          },
          {
            "Text": "~25% speedup",
            "Link": "https://bugs.freedesktop.org/show_bug.cgi?id=7910"
          },
          {
            "Text": ", "
          },
          {
            "Text": "~2% speedup",
            "Link": "https://bugs.freedesktop.org/show_bug.cgi?id=8111"
          },
          {
            "Text": ", "
          },
          {
            "Text": "~7% speedup",
            "Link": "https://bugs.freedesktop.org/show_bug.cgi?id=8112"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "On how I improved Sumatra performance by ~60%",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 9
    }
  ],
  "Collections": null,
  "CollectionViews": null
}